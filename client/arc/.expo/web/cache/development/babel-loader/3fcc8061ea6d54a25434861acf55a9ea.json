{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FriendsScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allUsers = _useState2[0],\n      setAllUsers = _useState2[1];\n\n  useEffect(function () {});\n  var userList = props.route.params.userList.map(function (user) {\n    return _jsxs(Text, {\n      children: [_jsx(Button, {\n        color: \"black\",\n        title: user.firstName,\n        onPress: function onPress() {\n          console.log('hi');\n        }\n      }), user.firstName]\n    });\n  });\n  return _jsx(View, {\n    children: userList\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FriendsScreen.tsx"],"names":["React","useEffect","useState","FriendsScreen","props","allUsers","setAllUsers","userList","route","params","map","user","firstName","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAYA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAUhD,kBAAgCF,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AAmCFL,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,CAAT;AAIA,MAAIM,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,QAAnB,CAA4BG,GAA5B,CAAgC,UAACC,IAAD;AAAA,WAC7C,MAAC,IAAD;AAAA,iBACE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AACM,QAAA,KAAK,EAAEA,IAAI,CAACC,SADlB;AAEM,QAAA,OAAO,EAAE,mBAAK;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AAJP,QADF,EAOGH,IAAI,CAACC,SAPR;AAAA,MAD6C;AAAA,GAAhC,CAAf;AAYE,SACE,KAAC,IAAD;AAAA,cACGL;AADH,IADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button} from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport ApiService from '../ApiService';\n\n\ntype FriendsScreenParamList = {\n\n}\n\ntype Props = NativeStackScreenProps<FriendsScreenParamList, 'FriendsScreen'>;\n\nexport default function FriendsScreen(props: any) {\n\n  interface UserType {\n    firstName:string,\n    lastName:string,\n    email:string,\n    password:string,\n    }\n\n\n  const [allUsers, setAllUsers] = useState([])\n\n\n  // let friends = props.events.map(event =>\n  //   <div className=\"itemContainer\">\n  //     <div className=\"whiteDate\">\n  //     <h1 className=\"dayConverted\">{dayConverter(event.date)}</h1>\n  //     <h1 className=\"monthConverted\">{monthConverter(event.date)}</h1>\n  //     </div>\n  //     <div className=\"EventItem\">\n  //     <div className=\"eventsTitle\">\n  //       {event.title}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {dateConverter(event.date)}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {event.venue}\n  //     </div>\n  //     </div>\n  //   </div>\n  // )\n\n  // useEffect(() => {\n  //   ApiService.getUsers()\n  //   // .then(users => console.log(users))\n  //   .then(users => setAllUsers(users))\n  //   .then(allUsers => {\n  //     let userList = allUsers.map(user =>\n  //       <Text>{(user)? user.firstName + ' ' + user.lastName: 'User 1'}</Text>\n  //       )\n  //   })\n  // },[],\n  // )\n\nuseEffect(() => {\n})\n\n// let userArr = props.route.params.userList;\nlet userList = props.route.params.userList.map((user: any) =>\n  <Text>\n    <Button color=\"black\"\n          title={user.firstName}\n          onPress={()=> {\n            console.log('hi')\n          }}\n        />\n    {user.firstName}</Text>\n  )\n\n\n  return (\n    <View>\n      {userList}\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}