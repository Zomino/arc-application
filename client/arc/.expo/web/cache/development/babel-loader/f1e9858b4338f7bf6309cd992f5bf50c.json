{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ApiService from \"../ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function FriendsScreen(route) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userList = _useState2[0],\n      setUserList = _useState2[1];\n\n  useEffect(function () {\n    ApiService.getUsers().then(function (users) {\n      return setUserList(users);\n    }).then(function (users) {\n      return console.log(users);\n    });\n  }, []);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Add Friends\"\n    })\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FriendsScreen.tsx"],"names":["React","useEffect","useState","ApiService","FriendsScreen","route","userList","setUserList","getUsers","then","users","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAGA,OAAOC,UAAP;;AASA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAGhD,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AAuBAN,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,UAAU,CAACK,QAAX,GACCC,IADD,CACM,UAAAC,KAAK;AAAA,aAAIH,WAAW,CAACG,KAAD,CAAf;AAAA,KADX,EAECD,IAFD,CAEM,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAFX;AAGD,GAJQ,EAIP,EAJO,CAAT;AAQA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text } from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport ApiService from '../ApiService';\n\n\ntype FriendsScreenParamList = {\n\n}\n\ntype Props = NativeStackScreenProps<FriendsScreenParamList, 'FriendsScreen'>;\n\nexport default function FriendsScreen(route: any) {\n\n\n  const [userList, setUserList] = useState(\"\")\n\n\n  // let friends = props.events.map(event =>\n  //   <div className=\"itemContainer\">\n  //     <div className=\"whiteDate\">\n  //     <h1 className=\"dayConverted\">{dayConverter(event.date)}</h1>\n  //     <h1 className=\"monthConverted\">{monthConverter(event.date)}</h1>\n  //     </div>\n  //     <div className=\"EventItem\">\n  //     <div className=\"eventsTitle\">\n  //       {event.title}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {dateConverter(event.date)}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {event.venue}\n  //     </div>\n  //     </div>\n  //   </div>\n  // )\n\n  useEffect(() => {\n    ApiService.getUsers()\n    .then(users => setUserList(users))\n    .then(users => console.log(users))\n  },[],\n  )\n\n\n  return (\n    <View>\n      <Text>Add Friends</Text>\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}