{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function FriendsScreen(props) {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      allUsers = _useState2[0],\n      setAllUsers = _useState2[1];\n\n  useEffect(function () {\n    console.log(props.route.params.userList);\n  });\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Add Friends\"\n    })\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FriendsScreen.tsx"],"names":["React","useEffect","useState","FriendsScreen","props","undefined","allUsers","setAllUsers","console","log","route","params","userList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAYA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAUhD,kBAAgCF,QAAQ,CAAuBG,SAAvB,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAmCFN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,QAA/B;AACD,GAFQ,CAAT;AAME,SACE,KAAC,IAAD;AAAA,cACE,KAAC,IAAD;AAAA;AAAA;AADF,IADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text } from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport ApiService from '../ApiService';\n\n\ntype FriendsScreenParamList = {\n\n}\n\ntype Props = NativeStackScreenProps<FriendsScreenParamList, 'FriendsScreen'>;\n\nexport default function FriendsScreen(props: any) {\n\n  interface UserType {\n    firstName:string,\n    lastName:string,\n    email:string,\n    password:string,\n    }\n\n\n  const [allUsers, setAllUsers] = useState<UserType | undefined>(undefined)\n\n\n  // let friends = props.events.map(event =>\n  //   <div className=\"itemContainer\">\n  //     <div className=\"whiteDate\">\n  //     <h1 className=\"dayConverted\">{dayConverter(event.date)}</h1>\n  //     <h1 className=\"monthConverted\">{monthConverter(event.date)}</h1>\n  //     </div>\n  //     <div className=\"EventItem\">\n  //     <div className=\"eventsTitle\">\n  //       {event.title}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {dateConverter(event.date)}\n  //     </div>\n  //     <div className=\"eventsDetails\">\n  //       {event.venue}\n  //     </div>\n  //     </div>\n  //   </div>\n  // )\n\n  // useEffect(() => {\n  //   ApiService.getUsers()\n  //   // .then(users => console.log(users))\n  //   .then(users => setAllUsers(users))\n  //   .then(allUsers => {\n  //     let userList = allUsers.map(user =>\n  //       <Text>{(user)? user.firstName + ' ' + user.lastName: 'User 1'}</Text>\n  //       )\n  //   })\n  // },[],\n  // )\n\nuseEffect(() => {\n  console.log(props.route.params.userList)\n})\n\n\n\n  return (\n    <View>\n      <Text>Add Friends</Text>\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}