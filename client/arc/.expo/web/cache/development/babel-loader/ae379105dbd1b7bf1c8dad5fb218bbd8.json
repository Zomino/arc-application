{"ast":null,"code":"var base_url = 'http://127.0.0.1:3000/';\n\nfunction fetchFactory(path, options) {\n  return fetch(base_url + path, options).then(function (res) {\n    return res.status < 400 ? res : Promise.reject();\n  }).then(function (res) {\n    return res.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nfunction createUser(user) {\n  return fetchFactory(base_url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(user);\n}\n\nvar ApiService = {\n  createUser: createUser\n};\nexport default ApiService;","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/ApiService.tsx"],"names":["base_url","fetchFactory","path","options","fetch","then","res","status","Promise","reject","json","catch","err","console","log","createUser","user","method","headers","body","JSON","stringify","ApiService"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,wBAAjB;;AAIA,SAASC,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAkD;AAEhD,SAAOC,KAAK,CAACJ,QAAQ,GAAGE,IAAZ,EAAkBC,OAAlB,CAAL,CACJE,IADI,CACC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,MAAJ,GAAa,GAAb,GAAmBD,GAAnB,GAAyBE,OAAO,CAACC,MAAR,EAA7B;AAAA,GADJ,EAEJJ,IAFI,CAEC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACI,IAAJ,EAAJ;AAAA,GAFJ,EAGJC,KAHI,CAGE,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAHL,CAAP;AAKD;;AAED,SAASG,UAAT,CAAoBC,IAApB,EAAgC;AAC9B,SAAOf,YAAY,CAACD,QAAD,EAAW;AAC5BiB,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFmB;AAK5BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AALsB,GAAX,CAAnB;AAOAH,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD;;AAKD,IAAMM,UAAU,GAAG;AAACP,EAAAA,UAAU,EAAVA;AAAD,CAAnB;AAEA,eAAeO,UAAf","sourcesContent":["const base_url = 'http://127.0.0.1:3000/'\nimport { User } from './types/userType'\n\n\nfunction fetchFactory(path: string, options: any) {\n\n  return fetch(base_url + path, options)\n    .then(res => res.status < 400 ? res : Promise.reject())\n    .then(res => res.json())\n    .catch(err => console.log(err))\n\n}\n\nfunction createUser(user: User) {\n  return fetchFactory(base_url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n  console.log(user)\n}\n\n\n\n\nconst ApiService = {createUser}\n\nexport default ApiService"]},"metadata":{},"sourceType":"module"}