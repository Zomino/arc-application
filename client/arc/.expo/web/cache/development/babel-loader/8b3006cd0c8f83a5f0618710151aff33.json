{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from \"../ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EventListScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myEvents = _useState2[0],\n      setMyEvents = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    console.log('props', props.route.params.user);\n    ApiService.getEventsList(props.route.params.user).then(function (events) {\n      return setMyEvents(events);\n    });\n  }, []);\n  var attendedEvents = myEvents.map(function (event) {\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: event.eventName\n      }), _jsx(Button, {\n        color: \"blue\",\n        title: \"Go to Event\",\n        onPress: function onPress() {\n          console.log('hola');\n        }\n      })]\n    }, event._id);\n  });\n  return _jsxs(View, {\n    children: [attendedEvents, _jsx(Text, {\n      children: \"Hi\"\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/EventListScreen.tsx"],"names":["React","useEffect","useState","useNavigation","ApiService","EventListScreen","props","myEvents","setMyEvents","navigation","console","log","route","params","user","getEventsList","then","events","attendedEvents","map","event","eventName","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,UAAP;;;AAUA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAoC;AAEjD,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAAvC;AACAV,IAAAA,UAAU,CAACW,aAAX,CAAyBT,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAA5C,EACCE,IADD,CACM,UAAAC,MAAM;AAAA,aAAIT,WAAW,CAACS,MAAD,CAAf;AAAA,KADZ;AAED,GAJQ,EAIP,EAJO,CAAT;AAQA,MAAIC,cAAc,GAAGX,QAAQ,CAACY,GAAT,CAAa,UAACC,KAAD,EAClC;AACE,WAAO,MAAC,IAAD;AAAA,iBACP,KAAC,IAAD;AAAA,kBACGA,KAAK,CAACC;AADT,QADO,EAIP,KAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,OAAO,EAAE,mBAAM;AAACX,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACb;AAJL,QAJO;AAAA,OAAWS,KAAK,CAACE,GAAjB,CAAP;AAUD,GAZoB,CAArB;AAeA,SACE,MAAC,IAAD;AAAA,eACGJ,cADH,EAEE,KAAC,IAAD;AAAA;AAAA,MAFF;AAAA,IADF;AAMD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button} from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from '../ApiService';\nimport SingleEventScreen from '../screens/SingleEventScreen';\n\n\n\ninterface EventListScreenProps {\n  user: string\n}\n\n\nexport default function EventListScreen(props:any) {\n\n  const [myEvents, setMyEvents] = useState([])\n\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    console.log('props',props.route.params.user)\n    ApiService.getEventsList(props.route.params.user)\n    .then(events => setMyEvents(events))\n  },[],\n  )\n\n\n  let attendedEvents = myEvents.map((event: any) =>\n  {\n    return <View key={event._id}>\n    <Text>\n      {event.eventName}\n    </Text>\n    <Button\n      color='blue'\n      title='Go to Event'\n      onPress={() => {console.log('hola')\n        }} />\n     </View>\n  }\n)\n\n  return (\n    <View>\n      {attendedEvents}\n      <Text>Hi</Text>\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}