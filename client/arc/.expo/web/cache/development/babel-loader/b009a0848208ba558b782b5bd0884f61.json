{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleEventScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      paid = _useState4[0],\n      setPaid = _useState4[1];\n\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (events) {\n      return console.log(events);\n    });\n  }, []);\n  useEffect(function () {});\n\n  function payNow(event, user) {\n    ApiService.updatePayment(event, user);\n  }\n\n  var myEvent = event.map(function (event) {\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: event.eventName\n      }), _jsx(Button, {\n        color: paid ? 'pink' : 'blue',\n        title: paid ? 'Paid!' : 'Pay Now',\n        onPress: function onPress() {\n          setPaid(true);\n          payNow(event._id, props.route.params.user);\n        }\n      })]\n    }, event._id);\n  });\n  return _jsx(View, {\n    children: myEvent\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/SingleEventScreen.tsx"],"names":["React","useEffect","useState","ApiService","SingleEventScreen","props","event","setEvent","paid","setPaid","currentEvent","route","params","eventId","getEvent","then","events","console","log","payNow","user","updatePayment","myEvent","map","eventName","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAOC,UAAP;;;AAOA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAsC;AAIrD,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBL,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,YAAY,GAAG;AAACJ,MAAAA,KAAK,EAAED,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC;AAA3B,KAArB;AACAV,IAAAA,UAAU,CAACW,QAAX,CAAoBJ,YAApB,EACCK,IADD,CACM,UAAAC,MAAM;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,KADZ;AAED,GAJQ,EAIP,EAJO,CAAT;AAOAf,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,CAAT;;AAIA,WAASkB,MAAT,CAAgBb,KAAhB,EAA2Bc,IAA3B,EAAqC;AACnCjB,IAAAA,UAAU,CAACkB,aAAX,CAAyBf,KAAzB,EAAgCc,IAAhC;AACD;;AAID,MAAIE,OAAO,GAAGhB,KAAK,CAACiB,GAAN,CAAU,UAACjB,KAAD,EAAgB;AACtC,WAAO,MAAC,IAAD;AAAA,iBACP,KAAC,IAAD;AAAA,kBAAOA,KAAK,CAACkB;AAAb,QADO,EAEP,KAAC,MAAD;AACI,QAAA,KAAK,EAAEhB,IAAI,GAAG,MAAH,GAAY,MAD3B;AAEI,QAAA,KAAK,EAAEA,IAAI,GAAG,OAAH,GAAa,SAF5B;AAGI,QAAA,OAAO,EAAE,mBAAM;AACbC,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAU,UAAAA,MAAM,CAACb,KAAK,CAACmB,GAAP,EAAYpB,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBQ,IAA/B,CAAN;AACD;AANL,QAFO;AAAA,OAAWd,KAAK,CAACmB,GAAjB,CAAP;AAWD,GAZa,CAAd;AAcE,SACE,KAAC,IAAD;AAAA,cACGH;AADH,IADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button } from 'react-native'\nimport ApiService from '../ApiService'\n\n\ninterface SingleEventScreenProps {\n  user: string\n}\n\nexport default function SingleEventScreen(props:any) {\n\n// console.log(props.route.params)\n\nconst [event, setEvent] = useState([])\nconst [paid, setPaid] = useState(false)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(events => console.log(events))\n},[],\n)\n\nuseEffect(() => {\n\n})\n\nfunction payNow(event:any, user:any) {\n  ApiService.updatePayment(event, user)\n}\n\n\n\nlet myEvent = event.map((event: any) => {\n  return <View key={event._id}>\n  <Text>{event.eventName}</Text>\n  <Button\n      color={paid ? 'pink' : 'blue'}\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        setPaid(true);\n        payNow(event._id, props.route.params.user)\n      }\n        } />\n  </View>\n})\n\n  return (\n    <View>\n      {myEvent}\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}