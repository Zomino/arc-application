{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ApiService from \"../ApiService\";\nimport { useState, useEffect } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var user = _ref.user;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  useEffect(function () {\n    ApiService.getUser(user).then(function (user) {\n      return setProfile(user);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"rgb(20,20,30)\"\n    },\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/logohq.png\")\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Welcome Back \", profile ? profile.firstName : 'User 1']\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Name: \", profile ? profile.firstName + ' ' + profile.lastName : 'User 1']\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Email:\", profile ? profile.firstName : 'User 1']\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logo: {\n    width: 100,\n    height: 100,\n    top: 20\n  },\n  button: {\n    color: 'black'\n  },\n  container: {\n    color: 'white'\n  },\n  text: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/ProfileScreen.tsx"],"names":["React","ApiService","useState","useEffect","ProfileScreen","user","undefined","profile","setProfile","getUser","then","flex","alignItems","justifyContent","backgroundColor","styles","logo","require","text","firstName","lastName","StyleSheet","create","width","height","top","button","color","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAKA,OAAOC,UAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAcA,eAAe,SAASC,aAAT,OAAmD;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;;AAGhE,kBAA8BH,QAAQ,CAA0BI,SAA1B,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAGAL,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,UAAU,CAACQ,OAAX,CAAmBJ,IAAnB,EACCK,IADD,CACM,UAAAL,IAAI;AAAA,aAAGG,UAAU,CAACH,IAAD,CAAb;AAAA,KADV;AAED,GAHQ,EAGP,EAHO,CAAT;AAWA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE,QAAjD;AAA2DC,MAAAA,eAAe,EAAE;AAA5E,KAAb;AAAA,eACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,MAAM,CAACC,IAArB;AAA2B,MAAA,MAAM,EAAEC,OAAO;AAA1C,MADF,EAGA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA,kCAAyCX,OAAD,GAAWA,OAAO,CAACY,SAAnB,GAA+B,QAAvE;AAAA,MAHA,EAIA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACG,IAApB;AAAA,2BAAkCX,OAAD,GAAWA,OAAO,CAACY,SAAR,GAAoB,GAApB,GAA0BZ,OAAO,CAACa,QAA7C,GAAuD,QAAxF;AAAA,MAJA,EAKA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACG,IAApB;AAAA,2BAAkCX,OAAD,GAAWA,OAAO,CAACY,SAAnB,GAA+B,QAAhE;AAAA,MALA;AAAA,IADF;AAWD;AAED,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,KAAK,EAAC,GADF;AAEJC,IAAAA,MAAM,EAAC,GAFH;AAGJC,IAAAA,GAAG,EAAC;AAHA,GADyB;AAM/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAC;AADA,GANuB;AAS/BC,EAAAA,SAAS,EAAE;AACTD,IAAAA,KAAK,EAAC;AADG,GAToB;AAY/BT,EAAAA,IAAI,EAAE;AACJS,IAAAA,KAAK,EAAC;AADF;AAZyB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { Button, View, Text, Image, StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ApiService from '../ApiService'\nimport { useState, useEffect } from 'react'\n\n\ninterface ProfileScreenProps {\n  user: string\n}\n\ninterface ProfileType {\nfirstName:string,\nlastName:string,\nemail:string,\npassword:string,\n}\n\nexport default function ProfileScreen({user}: ProfileScreenProps) {\n\n\n  const [profile, setProfile] = useState<ProfileType | undefined>(undefined)\n\n\n  useEffect(() => {\n    ApiService.getUser(user)\n    .then(user=> setProfile(user))\n  },[],\n  )\n\n\n\n\n\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: \"rgb(20,20,30)\", }}>\n      <Image style={styles.logo} source={require('../assets/logohq.png')}\n      />\n    <Text style={styles.text}>Welcome Back {(profile)? profile.firstName : 'User 1'}</Text>\n    <Text style={styles.text}>Name: {(profile)? profile.firstName + ' ' + profile.lastName: 'User 1'}</Text>\n    <Text style={styles.text}>Email:{(profile)? profile.firstName : 'User 1'}</Text>\n    {/* <Text style={styles.text}>{(profile)? profile.firstName : 'User 1'}</Text> */}\n  </View>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n  logo: {\n    width:100,\n    height:100,\n    top:20,\n  },\n  button: {\n    color:'black'\n  },\n  container: {\n    color:'white'\n  },\n  text: {\n    color:'white'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}