{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from \"../ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EventListScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myEvents = _useState2[0],\n      setMyEvents = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var currentUser = {\n      user: props.route.params.user\n    };\n    ApiService.getEventsList(currentUser).then(function (events) {\n      return setMyEvents(events);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var attendedEvents = myEvents.map(function (event) {\n    return _jsxs(View, {\n      style: styles.eventContainer,\n      children: [_jsx(Text, {\n        style: styles.eventHeader,\n        children: event.eventName\n      }), _jsx(Text, {\n        style: styles.label,\n        children: event.venue\n      }), _jsx(Text, {\n        style: styles.label,\n        children: event.date\n      }), _jsx(Button, {\n        color: \"#29b6f6\",\n        title: \"Go to Event\",\n        onPress: function onPress() {\n          navigation.navigate('SingleEventScreen', {\n            eventId: event._id\n          });\n        }\n      })]\n    }, event._id);\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Current Arcs\"\n    }), attendedEvents ? attendedEvents : _jsx(Text, {\n      children: \"Placeholder\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  label: {\n    color: 'white',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  header: {\n    color: 'white',\n    marginTop: 40,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  title: {\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/EventListScreen.tsx"],"names":["React","useEffect","useState","useNavigation","ApiService","EventListScreen","props","myEvents","setMyEvents","navigation","currentUser","user","route","params","getEventsList","then","events","catch","err","console","log","attendedEvents","map","event","styles","eventContainer","eventHeader","eventName","label","venue","date","navigate","eventId","_id","container","header","StyleSheet","create","color","marginTop","marginBottom","fontWeight","fontSize","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,UAAP;;;AASA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAoC;AAEjD,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,WAAW,GAAG;AAACC,MAAAA,IAAI,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBF;AAA1B,KAApB;AACAP,IAAAA,UAAU,CAACU,aAAX,CAAyBJ,WAAzB,EAECK,IAFD,CAEM,UAAAC,MAAM;AAAA,aAAIR,WAAW,CAACQ,MAAD,CAAf;AAAA,KAFZ,EAGCC,KAHD,CAGO,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAHV;AAID,GANQ,EAMP,EANO,CAAT;AAYF,MAAMG,cAAc,GAAGd,QAAQ,CAACe,GAAT,CAAa,UAACC,KAAD,EAClC;AACE,WAAO,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA,iBACP,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA,kBACGH,KAAK,CAACI;AADT,QADO,EAIP,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA,kBACGL,KAAK,CAACM;AADT,QAJO,EAOP,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACI,KAApB;AAAA,kBACGL,KAAK,CAACO;AADT,QAPO,EAUP,KAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,KAAK,EAAC,aAFR;AAGE,QAAA,OAAO,EAAE,mBAAM;AACbrB,UAAAA,UAAU,CAACsB,QAAX,CAAoB,mBAApB,EAAyC;AACvCC,YAAAA,OAAO,EAAET,KAAK,CAACU;AADwB,WAAzC;AAGD;AAPH,QAVO;AAAA,OAAyCV,KAAK,CAACU,GAA/C,CAAP;AAmBD,GArBoB,CAAvB;AAyBE,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACW,MAApB;AAAA;AAAA,MADF,EAEKd,cAAc,GAAGA,cAAH,GAAmB,KAAC,IAAD;AAAA;AAAA,MAFtC;AAAA,IADF;AAMD;AAGD,IAAMG,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AA2B/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,SAAS,EAAE,CAFN;AAGLC,IAAAA,YAAY,EAAE;AAHT,GA3BwB;AAkC/BL,EAAAA,MAAM,EAAE;AACNG,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,SAAS,EAAE,EAFL;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,UAAU,EAAC,MAJL;AAKNC,IAAAA,QAAQ,EAAE;AALJ,GAlCuB;AA0C/BC,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,OADF;AAELI,IAAAA,QAAQ,EAAE,EAFL;AAGLD,IAAAA,UAAU,EAAE;AAHP;AA1CwB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button, StyleSheet} from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from '../ApiService';\n\n\n\ninterface EventListScreenProps {\n  user: string\n}\n\n\nexport default function EventListScreen(props:any) {\n\n  const [myEvents, setMyEvents] = useState([])\n\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const currentUser = {user: props.route.params.user}\n    ApiService.getEventsList(currentUser)\n    // .then(events => console.log(events))\n    .then(events => setMyEvents(events))\n    .catch(err => console.log(err))\n  },[],\n  )\n\n  // const {width, height} = require('Dimensions').get('window');\n\n\nconst attendedEvents = myEvents.map((event: any) =>\n  {\n    return <View style={styles.eventContainer} key={event._id}>\n    <Text style={styles.eventHeader}>\n      {event.eventName}\n    </Text>\n    <Text style={styles.label}>\n      {event.venue}\n    </Text>\n    <Text style={styles.label}>\n      {event.date}\n    </Text>\n    <Button\n      color='#29b6f6'\n      title='Go to Event'\n      onPress={() => {\n        navigation.navigate('SingleEventScreen', {\n          eventId: event._id\n        })\n      }} />\n     </View>\n  }\n  )\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Current Arcs</Text>\n        {attendedEvents ? attendedEvents: <Text>Placeholder</Text>}\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  // container: {\n  //   flex: 1,\n  //   // width: 280,\n  //   // height:600,\n  //   alignItems:'center',\n  //   justifyContent: 'flex-start',\n  //   backgroundColor: \"rgb(20,20,30)\"\n  // },\n  // eventHeader: {\n  //   color: 'white',\n  //   fontSize: 15,\n  // },\n  // eventContainer: {\n  //   flex: 1,\n  //   width: \"80%\",\n  //   borderTopColor:'#C996D4',\n  //   borderRightColor:\"rgb(20,20,30)\",\n  //   borderLeftColor:\"rgb(20,20,30)\",\n  //   borderWidth:1,\n  //   // paddingBottom:0,\n  //   // borderBottom:40,\n  //   height:600,\n  //   // alignItems:'center',\n  //   // justifyContent: 'flex-start',\n  //   backgroundColor: \"rgb(20,20,30)\"\n  // },\n  label: {\n    color: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    // fontWeight:'bold'\n    // marginRight:220\n  },\n  header: {\n    color: 'white',\n    marginTop: 40,\n    marginBottom: 20,\n    fontWeight:'bold',\n    fontSize: 30,\n    // marginRight:220\n  },\n  title: {\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold'\n  },\n\n})\n"]},"metadata":{},"sourceType":"module"}