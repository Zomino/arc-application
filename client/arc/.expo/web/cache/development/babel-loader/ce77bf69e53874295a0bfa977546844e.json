{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../ApiService\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleEventScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      paid = _useState4[0],\n      setPaid = _useState4[1];\n\n  console.log(props.route.params.user);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (events) {\n      return setEvent(events);\n    }).then(function (userPaid) {\n      return setPaid(event[0].arcsPaid[props.route.params.user] ? true : false);\n    });\n  });\n\n  function payNow(event, user) {\n    ApiService.updatePayment(event, user);\n  }\n\n  var details = event.map(function (event) {\n    return _jsx(Text, {\n      children: event.eventName\n    });\n  });\n  var myArc = event.map(function (event) {\n    if (paid) {\n      return _jsx(View, {\n        children: _jsx(Button, {\n          color: \"blue\",\n          title: paid ? 'Paid!' : 'Pay Now',\n          onPress: function onPress() {\n            setPaid(true);\n            payNow(event._id, props.route.params.user);\n          }\n        })\n      }, event._id);\n    } else {\n      return _jsx(View, {\n        children: _jsx(Button, {\n          color: \"pink\",\n          title: paid ? 'Paid!' : 'Pay Now',\n          onPress: function onPress() {\n            setPaid(true);\n            payNow(event._id, props.route.params.user);\n          }\n        })\n      }, event._id);\n    }\n  });\n  return _jsxs(View, {\n    children: [details, myArc, _jsx(Button, {\n      color: \"black\",\n      title: \"Back to Events\",\n      onPress: function onPress() {\n        navigation.goBack();\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/SingleEventScreen.tsx"],"names":["React","useEffect","useState","ApiService","useNavigation","SingleEventScreen","props","navigation","event","setEvent","paid","setPaid","console","log","route","params","user","currentEvent","eventId","getEvent","then","events","userPaid","arcsPaid","payNow","updatePayment","details","map","eventName","myArc","_id","goBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAOC,UAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAOA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAsC;AAEnD,MAAMC,UAAU,GAAGH,aAAa,EAAhC;;AAIF,kBAA0BF,QAAQ,CAAQ,EAAR,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBP,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAA/B;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,YAAY,GAAG;AAACT,MAAAA,KAAK,EAAEF,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBG;AAA3B,KAArB;AACAf,IAAAA,UAAU,CAACgB,QAAX,CAAoBF,YAApB,EACCG,IADD,CACM,UAAAC,MAAM;AAAA,aAAIZ,QAAQ,CAACY,MAAD,CAAZ;AAAA,KADZ,EAECD,IAFD,CAEM,UAAAE,QAAQ;AAAA,aAAIX,OAAO,CACvBH,KAAK,CAAC,CAAD,CAAL,CAASe,QAAT,CAAkBjB,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAArC,IAA6C,IAA7C,GAAoD,KAD7B,CAAX;AAAA,KAFd;AAKD,GAPQ,CAAT;;AAYA,WAASQ,MAAT,CAAgBhB,KAAhB,EAA2BQ,IAA3B,EAAqC;AACnCb,IAAAA,UAAU,CAACsB,aAAX,CAAyBjB,KAAzB,EAAgCQ,IAAhC;AACD;;AAGD,MAAMU,OAAO,GAAGlB,KAAK,CAACmB,GAAN,CAAU,UAACnB,KAAD,EAAW;AACnC,WAAO,KAAC,IAAD;AAAA,gBAAOA,KAAK,CAACoB;AAAb,MAAP;AAED,GAHe,CAAhB;AAOA,MAAMC,KAAK,GAAGrB,KAAK,CAACmB,GAAN,CAAU,UAACnB,KAAD,EAAgB;AAExC,QAAIE,IAAJ,EAAU;AAER,aAAO,KAAC,IAAD;AAAA,kBAEP,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,KAAK,EAAEA,IAAI,GAAG,OAAH,GAAa,SAF5B;AAGI,UAAA,OAAO,EAAE,mBAAM;AACbC,YAAAA,OAAO,CAAC,IAAD,CAAP;AACAa,YAAAA,MAAM,CAAChB,KAAK,CAACsB,GAAP,EAAYxB,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAA/B,CAAN;AACD;AANL;AAFO,SAAWR,KAAK,CAACsB,GAAjB,CAAP;AAWD,KAbD,MAeK;AACH,aAAO,KAAC,IAAD;AAAA,kBAEP,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,KAAK,EAAEpB,IAAI,GAAG,OAAH,GAAa,SAF5B;AAGI,UAAA,OAAO,EAAE,mBAAM;AACbC,YAAAA,OAAO,CAAC,IAAD,CAAP;AACAa,YAAAA,MAAM,CAAChB,KAAK,CAACsB,GAAP,EAAYxB,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,IAA/B,CAAN;AACD;AANL;AAFO,SAAWR,KAAK,CAACsB,GAAjB,CAAP;AAYD;AACA,GA/Ba,CAAd;AAqCE,SACE,MAAC,IAAD;AAAA,eACGJ,OADH,EAEGG,KAFH,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AACA,MAAA,KAAK,EAAC,gBADN;AAEA,MAAA,OAAO,EAAE,mBAAM;AACbtB,QAAAA,UAAU,CAACwB,MAAX;AACD;AAJD,MAHF;AAAA,IADF;AAWD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button } from 'react-native'\nimport ApiService from '../ApiService'\nimport { useNavigation } from '@react-navigation/native';\n\n\ninterface SingleEventScreenProps {\n  user: string\n}\n\nexport default function SingleEventScreen(props:any) {\n\n  const navigation = useNavigation();\n\n\n\nconst [event, setEvent] = useState<any[]>([])\nconst [paid, setPaid] = useState(false)\n\nconsole.log(props.route.params.user)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(events => setEvent(events))\n  .then(userPaid => setPaid(\n    event[0].arcsPaid[props.route.params.user] ? true : false\n  ))\n}\n)\n\n\n\nfunction payNow(event:any, user:any) {\n  ApiService.updatePayment(event, user)\n}\n\n\nconst details = event.map((event) => {\n  return <Text>{event.eventName}</Text>\n\n})\n\n\n\nconst myArc = event.map((event: any) => {\n\nif (paid) {\n\n  return <View key={event._id}>\n\n  <Button\n      color='blue'\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        setPaid(true);\n        payNow(event._id, props.route.params.user)\n      }\n        } />\n  </View>\n}\n\nelse {\n  return <View key={event._id}>\n\n  <Button\n      color='pink'\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        setPaid(true);\n        payNow(event._id, props.route.params.user)\n      }\n        } />\n  </View>\n\n}\n}\n)\n\n\n\n\n  return (\n    <View>\n      {details}\n      {myArc}\n      <Button color='black'\n      title='Back to Events'\n      onPress={() => {\n        navigation.goBack()\n      }}/>\n    </View>\n  )\n}\n// function goBack() {\n//   throw new Error('Function not implemented.');\n// }\n\n"]},"metadata":{},"sourceType":"module"}