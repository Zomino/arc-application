{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUpForm() {\n  var _useForm = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    }\n  }),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    console.log(formData);\n  };\n\n  console.log('hi');\n\n  function onChange(arg) {}\n\n  ;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.label,\n      children: \"First name\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref) {\n        var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"firstName\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Last name\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            onBlur = _ref2$field.onBlur,\n            value = _ref2$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"lastName\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Email\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var _ref3$field = _ref3.field,\n            onChange = _ref3$field.onChange,\n            onBlur = _ref3$field.onBlur,\n            value = _ref3$field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"email\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Password\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref4) {\n        var _ref4$field = _ref4.field,\n            onChange = _ref4$field.onChange,\n            onBlur = _ref4$field.onBlur,\n            value = _ref4$field.value;\n        return _jsx(TextInput, {\n          secureTextEntry: true,\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChange(value);\n          },\n          value: value\n        });\n      },\n      name: \"password\",\n      rules: {\n        required: true\n      }\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        color: \"black\",\n        title: \"S U B M I T\",\n        onPress: handleSubmit(onSubmit)\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: 280,\n    height: 600,\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 15,\n    marginBottom: 5\n  },\n  button: {\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#C996D4',\n    borderRadius: 4,\n    fontWeight: \"bold\"\n  },\n  input: {\n    width: 320,\n    backgroundColor: 'black',\n    borderColor: '#C996D4',\n    borderWidth: 1,\n    color: 'white',\n    height: 40,\n    borderRadius: 4,\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/components/SignUpForm.tsx"],"names":["React","useForm","Controller","SignUpForm","defaultValues","firstName","lastName","email","password","register","setValue","handleSubmit","control","reset","errors","formState","onSubmit","formData","console","log","onChange","arg","styles","container","label","field","onBlur","value","input","required","button","StyleSheet","create","width","height","alignItems","alignContent","color","marginTop","marginBottom","justifyContent","backgroundColor","borderRadius","fontWeight","borderColor","borderWidth","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Text, StyleSheet, View, TextInput, Button} from 'react-native';\nimport { useForm, Controller} from 'react-hook-form';\nimport Constants from 'expo-constants';\nimport { useState} from 'react'\n\n\n\n\n\n\nexport default function SignUpForm() {\n\n  // console.log('hi')\n\n  const { register, setValue, handleSubmit, control, reset, formState: { errors } } = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n    }\n  });\n\n  // const [firstName, setFirstName] = useState(\"\")\n  // const [lastName, setLastName] = useState(\"\")\n  // const [email, setEmail] = useState(\"\")\n  // const [password, setPassword] = useState(\"\")\n\n  const onSubmit = function (formData: any) {\n    console.log(formData);\n  }\n\n  console.log('hi')\n  function onChange(arg)  {\n  };\n\n  return (\n    <View style={styles.container}>\n    <Text style={styles.label}>First name</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"firstName\"\n        rules={{ required: true }}\n      />\n      <Text style={styles.label}>Last name</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"lastName\"\n        rules={{ required: true }}\n      />\n      <Text style={styles.label}>Email</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"email\"\n        rules={{ required: true }}\n      />\n      {/* <Text style={styles.label}>Account Number</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"account_number\"\n        rules={{ required: true }}\n      />\n      <Text style={styles.label}>Sort Code</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"sort_code\"\n        rules={{ required: true }}\n      /> */}\n      <Text style={styles.label}>Password</Text>\n      <Controller\n        control={control}\n        render={({field: { onChange, onBlur, value }}) => (\n          <TextInput\n          secureTextEntry={true}\n            style={styles.input}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"password\"\n        rules={{ required: true }}\n      />\n       <View style={styles.button}>\n        <Button color=\"black\"\n          title=\"S U B M I T\"\n          onPress={handleSubmit(onSubmit)}\n        />\n      </View>\n  </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 280,\n    height:600,\n    alignItems:'center',\n    alignContent: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 15,\n    marginBottom: 5,\n    // marginRight:220\n  },\n  button: {\n    // justifyContent:center,\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#C996D4',\n    borderRadius: 4,\n    fontWeight: \"bold\"\n\n  },\n\n  input: {\n    width:320,\n    backgroundColor: 'black',\n    borderColor: '#C996D4',\n    borderWidth:1,\n    color: 'white',\n    height: 40,\n    borderRadius: 4,\n    padding: 10,\n    // backgroundColor:\n  },\n\n\n});"]},"metadata":{},"sourceType":"module"}