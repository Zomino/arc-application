{"ast":null,"code":"var base_url = 'http://127.0.0.1:3000';\n\nfunction fetchFactory(path, options) {\n  return fetch(base_url + path, options).then(function (res) {\n    return res.status < 400 ? res : Promise.reject();\n  }).then(function (res) {\n    return res.json();\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nfunction createUser(user) {\n  return fetchFactory('/usercreate', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n}\n\nfunction getUser(email) {\n  var objEmail = {\n    email: email\n  };\n  console.log(objEmail);\n  return fetchFactory('/user', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email\n    })\n  });\n}\n\nfunction getUsers() {\n  return fetchFactory('/userlist', {});\n}\n\nfunction createEvent(event) {\n  return fetchFactory('/eventcreate', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(event)\n  });\n}\n\nfunction getEventsList(user) {\n  return fetchFactory('/eventsList', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n}\n\nfunction getEvent(event) {\n  return fetchFactory('/currentEvent', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(event)\n  });\n}\n\nfunction updatePayment(event, user) {\n  console.log('event', event);\n  return fetchFactory(\"/events/\" + event + \"/\" + user, {\n    method: \"PUT\"\n  });\n}\n\nvar ApiService = {\n  createUser: createUser,\n  getUser: getUser,\n  getUsers: getUsers,\n  createEvent: createEvent,\n  getEventsList: getEventsList,\n  getEvent: getEvent,\n  updatePayment: updatePayment\n};\nexport default ApiService;","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/ApiService.tsx"],"names":["base_url","fetchFactory","path","options","fetch","then","res","status","Promise","reject","json","catch","err","console","log","createUser","user","method","headers","body","JSON","stringify","getUser","email","objEmail","getUsers","createEvent","event","getEventsList","getEvent","updatePayment","ApiService"],"mappings":"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","sourcesContent":["const base_url = 'http://127.0.0.1:3000'\nimport { User } from './types/userType'\nimport axios from '../node_modules/axios';\n\n\nfunction fetchFactory(path: string, options: any) {\n\n\n  return fetch(base_url + path, options)\n    .then(res => res.status < 400 ? res : Promise.reject())\n    .then(res => res.json())\n    .catch(err => console.log(err))\n\n\n\n}\n\nfunction createUser(user: User) {\n  return fetchFactory('/usercreate', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n}\n\n\nfunction getUser(email: string) {\nconst objEmail = {email: email}\n  console.log(objEmail)\n  return fetchFactory('/user', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({email:email})\n  })\n}\n\nfunction getUsers() {\nreturn fetchFactory('/userlist',{})\n}\n\n\nfunction createEvent(event: any) {\n  return fetchFactory('/eventcreate', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(event)\n  })\n}\n\nfunction getEventsList(user: any) {\n  // console.log('hitting Api', user)\n  return fetchFactory('/eventsList', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  })\n}\n\nfunction getEvent(event:any) {\n  return fetchFactory('/currentEvent', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(event)\n  })\n}\n\nfunction updatePayment(event:any, user:any) {\n  console.log('event', event)\n  return fetchFactory(`/events/${event}/${user}`, {method: \"PUT\"})\n}\n\n\n\n\nconst ApiService = {createUser, getUser, getUsers, createEvent, getEventsList, getEvent, updatePayment}\n\nexport default ApiService"]},"metadata":{},"sourceType":"module"}