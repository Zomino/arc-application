{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ApiService from \"../ApiService\";\nimport { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var user = _ref.user,\n      setUser = _ref.setUser;\n  var navigation = useNavigation();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  useEffect(function () {\n    ApiService.getUser(user).then(function (user) {\n      return setProfile(user);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundColor: \"rgb(20,20,30)\"\n    },\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/logohq.png\")\n    }), _jsxs(Text, {\n      style: styles.header,\n      children: [\"Welcome back \", profile ? profile.firstName : 'User 1', \"!\"]\n    }), _jsx(View, {\n      style: styles.buttonCreate,\n      children: _jsx(Button, {\n        color: \"black\",\n        title: \"NEW ARC\",\n        onPress: function onPress() {\n          return navigation.navigate('NewArcScreen');\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.details,\n      children: [_jsxs(Text, {\n        style: styles.text,\n        children: [\"Name: \", profile ? profile.firstName + ' ' + profile.lastName : 'User 1']\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Email: \", profile ? profile.email : 'User 1']\n      })]\n    }), _jsx(View, {\n      style: styles.buttonEdit,\n      children: _jsx(Button, {\n        color: \"white\",\n        title: \"Edit Details\",\n        onPress: function onPress() {}\n      })\n    }), _jsx(View, {\n      style: styles.buttonLogout,\n      children: _jsx(Button, {\n        color: \"white\",\n        title: \"Logout\",\n        onPress: function onPress() {\n          return setUser('');\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logo: {\n    width: 300,\n    height: 300,\n    top: 20\n  },\n  button: {\n    color: 'black'\n  },\n  container: {\n    color: 'white'\n  },\n  text: {\n    color: 'white',\n    fontSize: 20,\n    marginBottom: 10,\n    fontStyle: 'italic'\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  logout: {},\n  buttonCreate: {\n    justifyContent: 'center',\n    width: 180,\n    marginTop: 30,\n    height: 50,\n    backgroundColor: '#29b6f6',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  buttonEdit: {\n    justifyContent: 'center',\n    width: 150,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#36454f',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 10\n  },\n  buttonLogout: {\n    justifyContent: 'center',\n    width: 150,\n    marginTop: 5,\n    height: 40,\n    backgroundColor: '#FF857a',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  details: {\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/ProfileScreen.tsx"],"names":["React","ApiService","useState","useEffect","useNavigation","ProfileScreen","user","setUser","navigation","undefined","profile","setProfile","getUser","then","flex","alignItems","justifyContent","backgroundColor","styles","logo","require","header","firstName","buttonCreate","navigate","details","text","lastName","email","buttonEdit","buttonLogout","StyleSheet","create","width","height","top","button","color","container","fontSize","marginBottom","fontStyle","fontWeight","logout","marginTop","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, View, Text, Image, StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ApiService from '../ApiService'\nimport { useState, useEffect } from 'react'\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\ntype LoginScreentypes = {\n  NewArcScreen: undefined;\n};\n\n\ninterface ProfileScreenProps {\n  user: string\n  setUser: React.Dispatch<React.SetStateAction<string>>\n}\n\ninterface ProfileType {\nfirstName:string,\nlastName:string,\nemail:string,\npassword:string,\n}\n\nexport default function ProfileScreen({user, setUser}: ProfileScreenProps) {\n\n\n\n\n  const navigation = useNavigation<StackNavigationProp<LoginScreentypes>>();\n\n\n  const [profile, setProfile] = useState<ProfileType | undefined>(undefined)\n\n\n  useEffect(() => {\n    ApiService.getUser(user)\n    .then(user=> setProfile(user))\n  },[],\n  )\n\n\n\n\n\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-start', backgroundColor: \"rgb(20,20,30)\", }}>\n      <Image style={styles.logo} source={require('../assets/logohq.png')}\n      />\n        <Text style={styles.header}>Welcome back {(profile)? profile.firstName : 'User 1'}!</Text>\n      <View style={styles.buttonCreate}>\n      <Button\n        color=\"black\"\n        title=\"NEW ARC\"\n        onPress={() => navigation.navigate('NewArcScreen')}\n        />\n        </View>\n    <View style={styles.details}>\n      <Text style={styles.text}>Name: {(profile)? profile.firstName + ' ' + profile.lastName: 'User 1'}</Text>\n      <Text style={styles.text}>Email: {(profile)? profile.email : 'User 1'}</Text>\n    </View>\n    <View style={styles.buttonEdit}>\n    <Button color=\"white\"\n        title=\"Edit Details\"\n        onPress={() => {}}\n        />\n    </View>\n    <View style={styles.buttonLogout}>\n    <Button color=\"white\"\n        title=\"Logout\"\n        onPress={() => setUser('')}\n        />\n    </View>\n  </View>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n  logo: {\n    width:300,\n    height:300,\n    top:20,\n  },\n  button: {\n    color:'black'\n  },\n  container: {\n    color:'white'\n  },\n  text: {\n    color:'white',\n    fontSize:20,\n    marginBottom:10,\n    fontStyle:'italic'\n  },\n  header: {\n    fontSize:30,\n    fontWeight:'bold',\n    color:'white'\n  },\n  logout: {\n\n  },\n  buttonCreate: {\n    // justifyContent:center,\n    justifyContent: 'center',\n    width: 180,\n    marginTop: 30,\n    height: 50,\n    backgroundColor: '#29b6f6',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 20\n\n  },\n  buttonEdit: {\n    // justifyContent:center,\n    justifyContent: 'center',\n    width: 150,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#36454f',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 10\n\n  },\n  buttonLogout: {\n    // justifyContent:center,\n    justifyContent: 'center',\n    width: 150,\n    marginTop: 5,\n    height: 40,\n    backgroundColor: '#FF857a',\n    borderRadius: 4,\n    fontWeight: \"bold\",\n    marginBottom: 20\n\n  },\n  details: {\n    // flex: 1,\n    marginTop: 10,\n    // marginRight:70,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}