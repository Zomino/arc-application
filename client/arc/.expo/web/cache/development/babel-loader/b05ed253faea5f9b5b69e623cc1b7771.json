{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../ApiService\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleEventScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventUsers = _useState4[0],\n      setEventUsers = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paid = _useState6[0],\n      setPaid = _useState6[1];\n\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (events) {\n      setEvent(events);\n      return events;\n    }).then(function (event) {\n      return console.log('event', event);\n    });\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (answer) {\n      return setPaid(answer[0].arcsPaid[props.route.params.user]);\n    });\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (users) {\n      console.log('users', users);\n      return users;\n    }).then(function (users) {\n      return setEventUsers(users[0].arcNameArray.map(function (a) {\n        return [a.firstName, a.lastName, a.email];\n      }));\n    });\n  }, []);\n\n  function payNow(event, user) {\n    ApiService.updatePayment(event, user);\n  }\n\n  var details = event.map(function (event) {\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: event.eventName\n      }), _jsx(Text, {\n        children: event.venue\n      }), _jsx(Text, {\n        children: event.date\n      }), _jsxs(Text, {\n        children: [\"Total Bill \\xA3\", event.totalCost]\n      }), _jsxs(Text, {\n        children: [\"Food Cost \\xA3\", event.foodCost]\n      }), _jsx(Text, {\n        children: \"Split between X people\"\n      }), _jsxs(Text, {\n        children: [\"Drinks Cost \\xA3\", event.drinksCost]\n      }), _jsx(Text, {\n        children: \"Split between X people\"\n      })]\n    }, event._id);\n  });\n  var myArc = eventUsers.filter(function (a) {\n    return a[2] === event[0].creator;\n  }).map(function (user, i) {\n    return _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [event[0].arcFirstNames[user[2]], \" owes \\xA3\", event[0].arcs[user[2]]]\n      }), _jsx(Text, {\n        children: event[0].arcsPaid[user[2]]\n      }), _jsx(Button, {\n        color: \"blue\",\n        title: paid ? 'Paid!' : 'Pay Now',\n        onPress: function onPress() {\n          payNow(event[0]._id, props.route.params.user);\n        }\n      })]\n    }, user[2]);\n  });\n  var eventZero = event;\n  var friendsArc = eventUsers.filter(function (a) {\n    return a[2] !== event[0].creator;\n  }).map(function (user, i) {\n    return _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [event[0].arcFirstNames[user[2]], \" owes \\xA3\", event[0].arcs[user[2]]]\n      }), _jsx(Text, {\n        children: event[0].arcsPaid[user[2]]\n      })]\n    }, user[2]);\n  });\n  return _jsxs(View, {\n    children: [details, myArc, friendsArc ? friendsArc : 'hi you', _jsx(Button, {\n      color: \"black\",\n      title: \"Back to Events\",\n      onPress: function onPress() {\n        navigation.goBack();\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/SingleEventScreen.tsx"],"names":["React","useEffect","useState","ApiService","useNavigation","SingleEventScreen","props","navigation","event","setEvent","eventUsers","setEventUsers","paid","setPaid","currentEvent","route","params","eventId","getEvent","then","events","console","log","answer","arcsPaid","user","users","arcNameArray","map","a","firstName","lastName","email","payNow","updatePayment","details","eventName","venue","date","totalCost","foodCost","drinksCost","_id","myArc","filter","creator","i","arcFirstNames","arcs","eventZero","friendsArc","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button } from 'react-native'\nimport ApiService from '../ApiService'\nimport { useNavigation } from '@react-navigation/native';\n\n\ninterface SingleEventScreenProps {\n  user: string\n}\n\nexport default function SingleEventScreen(props:any) {\n\n  const navigation = useNavigation();\n\n\n  // console.log('props', props)\n\n\n\nconst [event, setEvent] = useState<any[]>([])\nconst [eventUsers, setEventUsers] = useState<any[]>([])\nconst [paid, setPaid] = useState(false)\n\n// console.log(props.route.params.user)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(events => {\n    setEvent(events);\n    return events\n  })\n  .then(event => console.log('event',event))\n  // .then(events => {\n  //   setPaid(events[0].arcsPaid[props.route.params.user])\n  //   return events;\n  // })\n  // .then((users) => setEventUsers(users[0].arcNameArray))\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(answer => setPaid(answer[0].arcsPaid[props.route.params.user]))\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(users => {console.log('users',users);\n  return users})\n  .then((users) => setEventUsers(users[0].arcNameArray.map(a => [a.firstName, a.lastName, a.email])))\n},[]\n)\n\n\nfunction payNow(event:any, user:any) {\n  ApiService.updatePayment(event, user)\n}\n\n//event details\nconst details = event.map((event) => {\n  return <View key={event._id}>\n         <Text >{event.eventName}</Text>\n         <Text >{event.venue}</Text>\n         <Text >{event.date}</Text>\n         <Text >Total Bill £{event.totalCost}</Text>\n         <Text >Food Cost £{event.foodCost}</Text>\n         <Text >Split between X people</Text>\n         <Text >Drinks Cost £{event.drinksCost}</Text>\n         <Text >Split between X people</Text>\n\n  </View>\n})\n\n\n\n\nconst myArc = eventUsers.filter(a => a[2] === event[0].creator).map((user:any, i) => {\n\n\n   return <View key={user[2]}>\n   <Text >{event[0].arcFirstNames[user[2]]} owes £{event[0].arcs[user[2]]}</Text>\n   <Text >{event[0].arcsPaid[user[2]]}</Text>\n      <Button\n      color='blue'\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        payNow(event[0]._id, props.route.params.user)\n      }\n    } />\n\n   </View>\n\n })\n\n// let friendsArc;\n    const eventZero = event\n\n  //  const test = eventUsers.map(a => event[0].arcsFirstNames[a.email])\n\n   const friendsArc = eventUsers.filter(a => a[2] !== event[0].creator).map((user:any, i) => {\n\n\n      return <View key={user[2]}>\n      <Text >{event[0].arcFirstNames[user[2]]} owes £{event[0].arcs[user[2]]}</Text>\n      <Text >{event[0].arcsPaid[user[2]]}</Text>\n      </View>\n\n    })\n\n    // event[0].arcsNameArray.filter(a => a.)\n\n\n\n//Friends Components\n\n\n\n  return (\n    <View>\n      {details}\n      {myArc}\n      {friendsArc ? friendsArc : 'hi you'}\n      <Button color='black'\n      title='Back to Events'\n      onPress={() => {\n        navigation.goBack()\n      }}/>\n    </View>\n  )\n}\n// function goBack() {\n//   throw new Error('Function not implemented.');\n// }\n\n"]},"metadata":{},"sourceType":"module"}