{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport EventListScreen from \"../screens/EventListScreen\";\nimport SingleEventScreen from \"../screens/SingleEventScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EventNavigatorScreen(_ref) {\n  var user = _ref.user;\n  var Stack = createStackNavigator();\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"SingleEventScreen\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"EventListScreen\",\n      component: EventListScreen,\n      initialParams: {\n        user: user\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SingleEventScreen\",\n      component: SingleEventScreen,\n      initialParams: {\n        user: user\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/EventNavigatorScreen.tsx"],"names":["React","createStackNavigator","EventListScreen","SingleEventScreen","EventNavigatorScreen","user","Stack","headerShown"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,eAAP;AACA,OAAOC,iBAAP;;;AAOA,eAAe,SAASC,oBAAT,OAA6D;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAO1E,MAAMC,KAAK,GAAGL,oBAAoB,EAAlC;AAEA,SACE,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,mBAAlC;AAAuD,IAAA,aAAa,EAAE;AACpEM,MAAAA,WAAW,EAAE;AADuD,KAAtE;AAAA,eAGE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,iBAAnB;AAAqC,MAAA,SAAS,EAAEL,eAAhD;AAAiE,MAAA,aAAa,EAAE;AAACG,QAAAA,IAAI,EAAEA;AAAP;AAAhF,MAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,mBAAnB;AAAuC,MAAA,SAAS,EAAEF,iBAAlD;AAAqE,MAAA,aAAa,EAAE;AAACE,QAAAA,IAAI,EAAEA;AAAP;AAApF,MAJF;AAAA,IADF;AAQD","sourcesContent":["import React from 'react'\nimport { View, Text } from 'react-native'\nimport { createStackNavigator } from '@react-navigation/stack';\nimport EventListScreen from '../screens/EventListScreen';\nimport SingleEventScreen from '../screens/SingleEventScreen';\n\n\ninterface EventNavigatorProps {\n  user: string\n}\n\nexport default function EventNavigatorScreen({ user }: EventNavigatorProps) {\n\n  type StackParamsList = {\n    EventListScreen: {user: string},\n    SingleEventScreen: {user: string},\n  }\n\n  const Stack = createStackNavigator<StackParamsList>();\n\n  return (\n    <Stack.Navigator initialRouteName=\"SingleEventScreen\"  screenOptions={{\n      headerShown: false\n    }}>\n      <Stack.Screen name=\"EventListScreen\" component={EventListScreen} initialParams={{user: user}}/>\n      <Stack.Screen name=\"SingleEventScreen\" component={SingleEventScreen} initialParams={{user: user}}/>\n    </Stack.Navigator>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}