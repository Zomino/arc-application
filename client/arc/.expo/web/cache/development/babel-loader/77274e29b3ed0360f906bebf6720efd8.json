{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FoodScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodUsers = _useState2[0],\n      setFoodUsers = _useState2[1];\n\n  function updateFoodUsers(email) {\n    setFoodUsers(function (oldUsers) {\n      return [].concat(_toConsumableArray(oldUsers), [email]);\n    });\n  }\n\n  var foodUserList = props.route.params.eventUsers.map(function (user) {\n    return _jsx(Button, {\n      color: foodUsers.includes(user) ? 'blue' : 'black',\n      title: user.firstName + \" \" + user.lastName,\n      onPress: function onPress() {\n        updateFoodUsers(user);\n      }\n    }, user.email);\n  });\n  console.log(props);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Who Ate?\"\n    }), foodUserList, _jsx(Button, {\n      color: \"black\",\n      title: \"ADD FRIENDS\",\n      onPress: function onPress() {}\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FoodScreen.tsx"],"names":["React","useState","FoodScreen","props","foodUsers","setFoodUsers","updateFoodUsers","email","oldUsers","foodUserList","route","params","eventUsers","map","user","includes","firstName","lastName","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAAgC;AAK7C,kBAAyCF,QAAQ,CAAC,EAAD,CAAjD;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAIA,WAASC,eAAT,CAAyBC,KAAzB,EAAqC;AACnCF,IAAAA,YAAY,CAAC,UAACG,QAAD;AAAA,0CAAuBA,QAAvB,IAAiCD,KAAjC;AAAA,KAAD,CAAZ;AAED;;AAID,MAAIE,YAAY,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,UAAnB,CAA8BC,GAA9B,CAAkC,UAACC,IAAD,EACrD;AACA,WAAY,KAAC,MAAD;AAER,MAAA,KAAK,EAAEV,SAAS,CAACW,QAAV,CAAmBD,IAAnB,IAA2B,MAA3B,GAAoC,OAFnC;AAGR,MAAA,KAAK,EAAEA,IAAI,CAACE,SAAL,GAAiB,GAAjB,GAAuBF,IAAI,CAACG,QAH3B;AAIR,MAAA,OAAO,EAAE,mBAAM;AAEbX,QAAAA,eAAe,CAACQ,IAAD,CAAf;AACD;AAPO,OACHA,IAAI,CAACP,KADF,CAAZ;AAQD,GAVoB,CAAnB;AAaAW,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,SACE,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEGM,YAFH,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,OAAO,EAAE,mBAAK,CAGb;AALL,MAHF;AAAA,IADF;AAcD","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, Button} from 'react-native'\n\nexport default function FoodScreen(props: any) {\n\n\n\n\n  const [foodUsers, setFoodUsers]: any[] = useState([])\n\n\n\n  function updateFoodUsers(email: any) {\n    setFoodUsers((oldUsers: any) => [...oldUsers, email])\n    // console.log(selectedUsers)\n  }\n\n\n\n  let foodUserList = props.route.params.eventUsers.map((user: any) =>\n  {\n  return      <Button\n      key={user.email}\n      color={foodUsers.includes(user) ? 'blue' : 'black'}\n      title={user.firstName + \" \" + user.lastName}\n      onPress={() => {\n        // console.log(user)\n        updateFoodUsers(user);\n      } } />;\n}\n)\n\n  console.log(props)\n  return (\n    <View>\n      <Text>Who Ate?</Text>\n      {foodUserList}\n      <Button color=\"black\"\n          title=\"ADD FRIENDS\"\n          onPress={()=> {\n            // props.route.params.updateEventUsers(selectedUsers);\n            // navigation.navigate('NewArcScreen')\n          }\n          }\n        />\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}