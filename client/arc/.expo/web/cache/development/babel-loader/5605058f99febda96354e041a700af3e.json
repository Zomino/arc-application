{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../ApiService\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleEventScreen(props) {\n  var navigation = useNavigation();\n  console.log('props', props);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventUsers = _useState4[0],\n      setEventUsers = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paid = _useState6[0],\n      setPaid = _useState6[1];\n\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (events) {\n      setEvent(events);\n    });\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (answer) {\n      return setPaid(answer[0].arcsPaid[props.route.params.user]);\n    });\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (users) {\n      console.log(users);\n      return users;\n    }).then(function (users) {\n      return setEventUsers(users[0].arcNameArray.map(function (a) {\n        return a.arcName;\n      }));\n    });\n  }, []);\n\n  function payNow(event, user) {\n    ApiService.updatePayment(event, user);\n  }\n\n  var details = event.map(function (event) {\n    return _jsx(Text, {\n      children: event.eventName\n    }, event._id);\n  });\n  var myArc = event.map(function (event) {\n    return _jsx(View, {\n      children: _jsx(Button, {\n        color: \"blue\",\n        title: paid ? 'Paid!' : 'Pay Now',\n        onPress: function onPress() {\n          payNow(event._id, props.route.params.user);\n        }\n      })\n    }, event._id);\n  });\n  var eventZero = event;\n  var test = eventUsers.map(function (a) {\n    return event[0].arcsFirstNames[a.email];\n  });\n  var friendsArc = test.map(function (user, i) {\n    console.log('user', user);\n    console.log('event0', event[0]);\n    return _jsx(Text, {\n      children: user\n    }, i);\n  });\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Hi\"\n    }), details, myArc, friendsArc ? friendsArc : 'hi you', _jsx(Button, {\n      color: \"black\",\n      title: \"Back to Events\",\n      onPress: function onPress() {\n        navigation.goBack();\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/SingleEventScreen.tsx"],"names":["React","useEffect","useState","ApiService","useNavigation","SingleEventScreen","props","navigation","console","log","event","setEvent","eventUsers","setEventUsers","paid","setPaid","currentEvent","route","params","eventId","getEvent","then","events","answer","arcsPaid","user","users","arcNameArray","map","a","arcName","payNow","updatePayment","details","eventName","_id","myArc","eventZero","test","arcsFirstNames","email","friendsArc","i","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button } from 'react-native'\nimport ApiService from '../ApiService'\nimport { useNavigation } from '@react-navigation/native';\n\n\ninterface SingleEventScreenProps {\n  user: string\n}\n\nexport default function SingleEventScreen(props:any) {\n\n  const navigation = useNavigation();\n\n\n  console.log('props', props)\n\n\n\nconst [event, setEvent] = useState<any[]>([])\nconst [eventUsers, setEventUsers] = useState<any[]>([])\nconst [paid, setPaid] = useState(false)\n\n// console.log(props.route.params.user)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(events => {\n    setEvent(events)\n  })\n  // .then(events => {\n  //   setPaid(events[0].arcsPaid[props.route.params.user])\n  //   return events;\n  // })\n  // .then((users) => setEventUsers(users[0].arcNameArray))\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(answer => setPaid(answer[0].arcsPaid[props.route.params.user]))\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(users => {console.log(users);\n  return users})\n  .then((users) => setEventUsers(users[0].arcNameArray.map(a => a.arcName)))\n},[]\n)\n\n//for checking data\n// useEffect(() => {\n//   const currentEvent = {event: props.route.params.eventId}\n//   ApiService.getEvent(currentEvent)\n//   .then(answer => console.log('eventdetails', answer))\n// },[]\n// )\n\n// //for checking data\n// useEffect(() => {\n//   const currentEvent = {event: props.route.params.eventId}\n//   ApiService.getEvent(currentEvent)\n//   .then((users) => console.log('usersarray', users[0].arcNameArray))\n// },[]\n// )\n\n// useEffect(() => {\n//   const currentEvent = {event: props.route.params.eventId}\n//   ApiService.getEvent(currentEvent)\n//   .then(event => setFriendsArcs(event.arcNameArray.map((user:any) => {\n//     return <Text>{user.email}</Text>\n//   })))\n// },[])\n\n\nfunction payNow(event:any, user:any) {\n  ApiService.updatePayment(event, user)\n}\n\n//event details\nconst details = event.map((event) => {\n  return <Text key={event._id}>{event.eventName}</Text>\n})\n\n\n\n//myArc Component\nconst myArc = event.map((event: any) => {\n\n  return <View key={event._id}>\n  <Button\n      color='blue'\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        payNow(event._id, props.route.params.user)\n      }\n    } />\n  </View>\n\n}\n)\n\n// let friendsArc;\n    const eventZero = event\n\n   const test = eventUsers.map(a => event[0].arcsFirstNames[a.email])\n\n   const friendsArc = test.map((user:any, i) => {\n\n    console.log('user',user)\n    console.log('event0',event[0])\n      return  <Text\n      key={i}>{user}</Text>\n    })\n\n    // event[0].arcsNameArray.filter(a => a.)\n\n\n\n//Friends Components\n\n\n\n  return (\n    <View>\n      <Text>Hi</Text>\n      {details}\n      {myArc}\n      {friendsArc ? friendsArc : 'hi you'}\n      <Button color='black'\n      title='Back to Events'\n      onPress={() => {\n        navigation.goBack()\n      }}/>\n    </View>\n  )\n}\n// function goBack() {\n//   throw new Error('Function not implemented.');\n// }\n\n"]},"metadata":{},"sourceType":"module"}