{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ApiService from \"../ApiService\";\nimport { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var user = _ref.user;\n  var navigation = useNavigation();\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  useEffect(function () {\n    ApiService.getUser(user).then(function (user) {\n      return setProfile(user);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: \"rgb(20,20,30)\"\n    },\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/logohq.png\")\n    }), _jsxs(Text, {\n      style: styles.header,\n      children: [\"Welcome back \", profile ? profile.firstName : 'User 1', \"!\"]\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Name: \", profile ? profile.firstName + ' ' + profile.lastName : 'User 1']\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Email:\", profile ? profile.email : 'User 1']\n    }), _jsx(Button, {\n      title: \"Create New Arc\",\n      onPress: function onPress() {\n        return navigation.navigate('NewArcScreen');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  logo: {\n    width: 100,\n    height: 100,\n    top: 20\n  },\n  button: {\n    color: 'black'\n  },\n  container: {\n    color: 'white'\n  },\n  text: {\n    color: 'white'\n  },\n  header: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/ProfileScreen.tsx"],"names":["React","ApiService","useState","useEffect","useNavigation","ProfileScreen","user","navigation","undefined","profile","setProfile","getUser","then","flex","alignItems","justifyContent","backgroundColor","styles","logo","require","header","firstName","text","lastName","email","navigate","StyleSheet","create","width","height","top","button","color","container","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAKA,OAAOC,UAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAmBA,eAAe,SAASC,aAAT,OAAmD;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAKhE,MAAMC,UAAU,GAAGH,aAAa,EAAhC;;AAGA,kBAA8BF,QAAQ,CAA0BM,SAA1B,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACdF,IAAAA,UAAU,CAACU,OAAX,CAAmBL,IAAnB,EACCM,IADD,CACM,UAAAN,IAAI;AAAA,aAAGI,UAAU,CAACJ,IAAD,CAAb;AAAA,KADV;AAED,GAHQ,EAGP,EAHO,CAAT;AAWA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE,QAAjD;AAA2DC,MAAAA,eAAe,EAAE;AAA5E,KAAb;AAAA,eACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,MAAM,CAACC,IAArB;AAA2B,MAAA,MAAM,EAAEC,OAAO;AAA1C,MADF,EAGA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA,kCAA2CX,OAAD,GAAWA,OAAO,CAACY,SAAnB,GAA+B,QAAzE;AAAA,MAHA,EAIA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA,2BAAkCb,OAAD,GAAWA,OAAO,CAACY,SAAR,GAAoB,GAApB,GAA0BZ,OAAO,CAACc,QAA7C,GAAuD,QAAxF;AAAA,MAJA,EAKA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACK,IAApB;AAAA,2BAAkCb,OAAD,GAAWA,OAAO,CAACe,KAAnB,GAA2B,QAA5D;AAAA,MALA,EAME,KAAC,MAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMjB,UAAU,CAACkB,QAAX,CAAoB,cAApB,CAAN;AAAA;AAFX,MANF;AAAA,IADF;AAcD;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,KAAK,EAAC,GADF;AAEJC,IAAAA,MAAM,EAAC,GAFH;AAGJC,IAAAA,GAAG,EAAC;AAHA,GADyB;AAM/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAC;AADA,GANuB;AAS/BC,EAAAA,SAAS,EAAE;AACTD,IAAAA,KAAK,EAAC;AADG,GAToB;AAY/BV,EAAAA,IAAI,EAAE;AACJU,IAAAA,KAAK,EAAC;AADF,GAZyB;AAe/BZ,EAAAA,MAAM,EAAE;AACNc,IAAAA,QAAQ,EAAC;AADH;AAfuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { Button, View, Text, Image, StyleSheet } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ApiService from '../ApiService'\nimport { useState, useEffect } from 'react'\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\ntype LoginScreentypes = {\n  NewArcScreen: undefined;\n};\n\n\ninterface ProfileScreenProps {\n  user: string\n}\n\ninterface ProfileType {\nfirstName:string,\nlastName:string,\nemail:string,\npassword:string,\n}\n\nexport default function ProfileScreen({user}: ProfileScreenProps) {\n\n\n\n\n  const navigation = useNavigation<StackNavigationProp<LoginScreentypes>>();\n\n\n  const [profile, setProfile] = useState<ProfileType | undefined>(undefined)\n\n\n  useEffect(() => {\n    ApiService.getUser(user)\n    .then(user=> setProfile(user))\n  },[],\n  )\n\n\n\n\n\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: \"rgb(20,20,30)\", }}>\n      <Image style={styles.logo} source={require('../assets/logohq.png')}\n      />\n    <Text style={styles.header}>Welcome back {(profile)? profile.firstName : 'User 1'}!</Text>\n    <Text style={styles.text}>Name: {(profile)? profile.firstName + ' ' + profile.lastName: 'User 1'}</Text>\n    <Text style={styles.text}>Email:{(profile)? profile.email : 'User 1'}</Text>\n      <Button\n        title=\"Create New Arc\"\n        onPress={() => navigation.navigate('NewArcScreen')}\n        />\n  </View>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n  logo: {\n    width:100,\n    height:100,\n    top:20,\n  },\n  button: {\n    color:'black'\n  },\n  container: {\n    color:'white'\n  },\n  text: {\n    color:'white'\n  },\n  header: {\n    fontSize:30\n  }\n})\n"]},"metadata":{},"sourceType":"module"}