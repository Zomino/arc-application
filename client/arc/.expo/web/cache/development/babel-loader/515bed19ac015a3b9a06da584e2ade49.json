{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ApiService from \"../ApiService\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SingleEventScreen(props) {\n  var navigation = useNavigation();\n  console.log('props', props);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      event = _useState2[0],\n      setEvent = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      eventUsers = _useState4[0],\n      setEventUsers = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paid = _useState6[0],\n      setPaid = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendsArcs = _useState8[0],\n      setFriendsArcs = _useState8[1];\n\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (events) {\n      return setEvent(events);\n    });\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (answer) {\n      return setPaid(answer[0].arcsPaid[props.route.params.user]);\n    });\n  }, []);\n  useEffect(function () {\n    var isMounted = true;\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (users) {\n      if (isMounted) {\n        setEventUsers(users[0].arcNameArray);\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var currentEvent = {\n      event: props.route.params.eventId\n    };\n    ApiService.getEvent(currentEvent).then(function (answer) {\n      return console.log('eventdetails', answer);\n    });\n  }, []);\n\n  function payNow(event, user) {\n    ApiService.updatePayment(event, user);\n  }\n\n  var details = event.map(function (event) {\n    return _jsx(Text, {\n      children: event.eventName\n    });\n  });\n  setFriendsArcs(eventUsers.reduce(function (a) {\n    return a.email !== event[0].creator;\n  }).map(function (user) {\n    return _jsx(Text, {\n      children: user.email\n    });\n  }));\n  var myArc = event.map(function (event) {\n    return _jsx(View, {\n      children: _jsx(Button, {\n        color: \"blue\",\n        title: paid ? 'Paid!' : 'Pay Now',\n        onPress: function onPress() {\n          setPaid(true);\n          payNow(event._id, props.route.params.user);\n        }\n      })\n    }, event._id);\n  });\n  return _jsxs(View, {\n    children: [details, myArc, friendsArcs ? friendsArcs : 'Hi You', _jsx(Button, {\n      color: \"black\",\n      title: \"Back to Events\",\n      onPress: function onPress() {\n        navigation.goBack();\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/SingleEventScreen.tsx"],"names":["React","useEffect","useState","ApiService","useNavigation","SingleEventScreen","props","navigation","console","log","event","setEvent","eventUsers","setEventUsers","paid","setPaid","friendsArcs","setFriendsArcs","currentEvent","route","params","eventId","getEvent","then","events","answer","arcsPaid","user","isMounted","users","arcNameArray","payNow","updatePayment","details","map","eventName","reduce","a","email","creator","myArc","_id","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button } from 'react-native'\nimport ApiService from '../ApiService'\nimport { useNavigation } from '@react-navigation/native';\n\n\ninterface SingleEventScreenProps {\n  user: string\n}\n\nexport default function SingleEventScreen(props:any) {\n\n  const navigation = useNavigation();\n\n\n  console.log('props', props)\n\n\n\nconst [event, setEvent] = useState<any[]>([])\nconst [eventUsers, setEventUsers] = useState<any[]>([])\nconst [paid, setPaid] = useState(false)\nconst [friendsArcs, setFriendsArcs] = useState<any[]>([])\n\n// console.log(props.route.params.user)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(events => setEvent(events))\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(answer => setPaid(answer[0].arcsPaid[props.route.params.user]))\n},[]\n)\n\nuseEffect(() => {\n  let isMounted = true;\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then((users) => {\n    if(isMounted) {\n      setEventUsers(users[0].arcNameArray)\n    }\n  });\n  return () => {isMounted = false}\n},[]\n)\n\nuseEffect(() => {\n  const currentEvent = {event: props.route.params.eventId}\n  ApiService.getEvent(currentEvent)\n  .then(answer => console.log('eventdetails', answer))\n},[]\n)\n\n// useEffect(() => {\n//   friendsArcs();\n//   return () => {\n//     setState({}); // This worked for me\n//   };\n// }, []);\n\n\n\n\n\n\n\nfunction payNow(event:any, user:any) {\n  ApiService.updatePayment(event, user)\n}\n\n\nconst details = event.map((event) => {\n  return <Text>{event.eventName}</Text>\n})\n\nsetFriendsArcs(eventUsers.reduce(a => a.email !== event[0].creator).map((user:any) => {\n  return <Text>{user.email}</Text>\n}))\n\n\n\nconst myArc = event.map((event: any) => {\n\n  return <View key={event._id}>\n  <Button\n      color='blue'\n      title={paid ? 'Paid!' : 'Pay Now'}\n      onPress={() => {\n        setPaid(true);\n        payNow(event._id, props.route.params.user)\n      }\n        } />\n  </View>\n\n}\n)\n\n\n\n\n  return (\n    <View>\n      {details}\n      {myArc}\n      {friendsArcs ? friendsArcs :'Hi You'}\n      <Button color='black'\n      title='Back to Events'\n      onPress={() => {\n        navigation.goBack()\n      }}/>\n    </View>\n  )\n}\n// function goBack() {\n//   throw new Error('Function not implemented.');\n// }\n\n"]},"metadata":{},"sourceType":"module"}