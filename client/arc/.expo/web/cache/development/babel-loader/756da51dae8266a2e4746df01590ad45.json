{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { useState, useEffect } from 'react';\nimport ApiService from \"../ApiService\";\nimport CurrencyInput from 'react-native-currency-input';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewArcForm(props) {\n  console.log('newarcprops', props);\n  var navigation = useNavigation();\n\n  var _useForm = useForm({\n    defaultValues: {\n      eventName: '',\n      date: '',\n      venue: '',\n      foodCost: '',\n      drinksCost: ''\n    }\n  }),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.formState.errors;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventName = _useState2[0],\n      setEventName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      venue = _useState6[0],\n      setVenue = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drinksCost = _useState8[0],\n      setDrinksCost = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userList = _useState10[0],\n      setUserList = _useState10[1];\n\n  var _useState11 = useState(new Array()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      eventUsers = _useState12[0],\n      setEventUsers = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      foodCost = _useState14[0],\n      setFoodCost = _useState14[1];\n\n  var _useState15 = useState(new Array()),\n      _useState16 = _slicedToArray(_useState15, 2),\n      foodUsers = _useState16[0],\n      setFoodUsers = _useState16[1];\n\n  var _useState17 = useState(new Array()),\n      _useState18 = _slicedToArray(_useState17, 2),\n      drinksUsers = _useState18[0],\n      setDrinksUsers = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      eventCreated = _useState20[0],\n      setEventCreated = _useState20[1];\n\n  useEffect(function () {\n    ApiService.getUsers().then(function (users) {\n      return setUserList(users);\n    });\n  }, []);\n\n  var calculateArc = function calculateArc() {\n    var totalCost = foodCost + drinksCost;\n    var creator = props.user;\n    var arcs = {};\n    var arcsPaid = {};\n    var arcItems = {};\n    eventUsers.map(function (user) {\n      return arcsPaid[user.email] = false;\n    });\n    var foodCostPerUser = Math.round(foodCost / foodUsers.length * 100) / 100;\n    console.log(foodCostPerUser);\n    var drinkCostPerUser = Math.round(drinksCost / drinksUsers.length * 100) / 100;\n    console.log(drinkCostPerUser);\n    foodUsers.map(function (user) {\n      if (drinksUsers.indexOf(user) === -1) {\n        arcs[user.email] = foodCostPerUser;\n        arcItems[user.email] = 'F';\n      } else {\n        arcs[user.email] = foodCostPerUser + drinkCostPerUser;\n        arcItems[user.email] = 'FD';\n      }\n    });\n    drinksUsers.map(function (user) {\n      if (foodUsers.indexOf(user) === -1) {\n        arcs[user.email] = drinkCostPerUser;\n        arcItems[user.email] = 'D';\n      } else return;\n    });\n    var newArc = {\n      eventName: eventName,\n      date: date,\n      venue: venue,\n      foodCost: foodCost,\n      drinksCost: drinksCost,\n      totalCost: foodCost + drinksCost,\n      creator: props.user,\n      arcs: arcs,\n      arcsPaid: arcsPaid,\n      arcItems: arcItems\n    };\n    var savedEvent = ApiService.createEvent(newArc);\n    console.log(savedEvent);\n  };\n\n  function onChangeEvent(arg) {\n    setEventName(arg);\n  }\n\n  ;\n\n  function onChangeDate(arg) {\n    setDate(arg);\n  }\n\n  ;\n\n  function onChangeVenue(arg) {\n    setVenue(arg);\n  }\n\n  ;\n\n  function onChangeFoodCost(arg) {\n    setFoodCost(arg);\n  }\n\n  ;\n\n  function onChangeDrinksCost(arg) {\n    setDrinksCost(arg);\n  }\n\n  ;\n\n  function updateEventUsers(arg) {\n    setEventUsers([].concat(_toConsumableArray(eventUsers), _toConsumableArray(arg)));\n  }\n\n  function updateFoodUsers(arg) {\n    setFoodUsers([].concat(_toConsumableArray(foodUsers), _toConsumableArray(arg)));\n  }\n\n  function updateDrinksUsers(arg) {\n    setDrinksUsers([].concat(_toConsumableArray(drinksUsers), _toConsumableArray(arg)));\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        color: \"black\",\n        title: \"ADD FRIENDS\",\n        onPress: function onPress() {\n          return navigation.navigate('FriendsScreen', {\n            userList: userList,\n            updateEventUsers: updateEventUsers\n          });\n        }\n      })\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Event Name\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref) {\n        var value = _ref.field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChangeEvent(value);\n          },\n          value: eventName\n        });\n      },\n      name: \"eventName\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Date\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref2) {\n        var value = _ref2.field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChangeDate(value);\n          },\n          value: date\n        });\n      },\n      name: \"date\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Venue\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref3) {\n        var value = _ref3.field.value;\n        return _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(value) {\n            return onChangeVenue(value);\n          },\n          value: venue\n        });\n      },\n      name: \"venue\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Food Cost\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref4) {\n        var value = _ref4.field.value;\n        return _jsx(CurrencyInput, {\n          keyboardType: \"numeric\",\n          style: styles.input,\n          onChangeValue: function onChangeValue(value) {\n            return onChangeFoodCost(value);\n          },\n          prefix: \"\\xA3\",\n          delimiter: \",\",\n          separator: \".\",\n          precision: 2,\n          value: foodCost,\n          onSubmitEditing: function onSubmitEditing() {\n            navigation.navigate('FoodScreen', {\n              foodCost: foodCost,\n              eventUsers: eventUsers,\n              updateFoodUsers: updateFoodUsers\n            });\n          }\n        });\n      },\n      name: \"foodCost\",\n      rules: {\n        required: true\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Drinks Cost\"\n    }), _jsx(Controller, {\n      control: control,\n      render: function render(_ref5) {\n        var value = _ref5.field.value;\n        return _jsx(CurrencyInput, {\n          keyboardType: \"numeric\",\n          style: styles.input,\n          onChangeValue: function onChangeValue(value) {\n            return onChangeDrinksCost(value);\n          },\n          prefix: \"\\xA3\",\n          delimiter: \",\",\n          separator: \".\",\n          precision: 2,\n          value: drinksCost,\n          onSubmitEditing: function onSubmitEditing() {\n            navigation.navigate('DrinksScreen', {\n              drinksCost: drinksCost,\n              eventUsers: eventUsers,\n              updateDrinksUsers: updateDrinksUsers\n            });\n          }\n        });\n      },\n      name: \"drinksCost\",\n      rules: {\n        required: true\n      }\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(Button, {\n        color: \"black\",\n        title: \"CREATE ARC\",\n        onPress: function onPress() {\n          calculateArc();\n          setEventCreated(true);\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: 280,\n    height: 600,\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 15,\n    marginBottom: 5\n  },\n  button: {\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#C996D4',\n    borderRadius: 4,\n    fontWeight: \"bold\"\n  },\n  input: {\n    width: 320,\n    backgroundColor: 'black',\n    borderColor: 'rgb(129,129,129)',\n    borderWidth: 1,\n    color: 'white',\n    height: 40,\n    borderRadius: 4,\n    padding: 10\n  },\n  signup: {\n    color: 'rgb(230,230,230)',\n    marginTop: 15,\n    marginBottom: 5,\n    fontWeight: 'bold',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/components/NewArcForm.tsx"],"names":["React","useForm","Controller","useState","useEffect","ApiService","CurrencyInput","useNavigation","NewArcForm","props","console","log","navigation","defaultValues","eventName","date","venue","foodCost","drinksCost","register","setValue","handleSubmit","control","reset","errors","formState","setEventName","setDate","setVenue","setDrinksCost","userList","setUserList","Array","eventUsers","setEventUsers","setFoodCost","foodUsers","setFoodUsers","drinksUsers","setDrinksUsers","eventCreated","setEventCreated","getUsers","then","users","calculateArc","totalCost","creator","user","arcs","arcsPaid","arcItems","map","email","foodCostPerUser","Math","round","length","drinkCostPerUser","indexOf","newArc","savedEvent","createEvent","onChangeEvent","arg","onChangeDate","onChangeVenue","onChangeFoodCost","onChangeDrinksCost","updateEventUsers","updateFoodUsers","updateDrinksUsers","styles","container","button","navigate","label","value","field","input","required","StyleSheet","create","width","height","alignItems","alignContent","color","marginTop","marginBottom","justifyContent","backgroundColor","borderRadius","fontWeight","borderColor","borderWidth","padding","signup","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Text, StyleSheet, View, TextInput, Button, ScrollView} from 'react-native';\nimport { useForm, Controller} from 'react-hook-form';\nimport Constants from 'expo-constants';\nimport { useState, useEffect } from 'react'\nimport ApiService from '../ApiService'\nimport { NavigationContainer, NavigationProp } from '@react-navigation/native';\nimport { ParamsList } from '../screens/paramsList';\nimport CurrencyInput from 'react-native-currency-input';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\n\nexport default function NewArcForm(props:any) {\n\n  console.log('newarcprops', props)\n\n\n  const navigation = useNavigation();\n\n  const { register, setValue, handleSubmit, control, reset, formState: { errors } } = useForm({\n    defaultValues: {\n      eventName: '',\n      date: '',\n      venue: '',\n      foodCost: '',\n      drinksCost: '',\n    }\n  });\n\n  const [eventName, setEventName] = useState(\"\")\n  const [date, setDate] = useState(\"\")\n  const [venue, setVenue] = useState(\"\")\n  const [drinksCost, setDrinksCost] = useState(0)\n  const [userList, setUserList] = useState([])\n  const [eventUsers, setEventUsers] = useState(new Array())\n  const [foodCost, setFoodCost] = useState(0)\n  const [foodUsers, setFoodUsers] = useState(new Array())\n  const [drinksUsers, setDrinksUsers] = useState(new Array())\n  const [eventCreated, setEventCreated] = useState(false)\n\n  useEffect(() => {\n    ApiService.getUsers()\n    .then(users => {\n      return setUserList(users);\n    })\n  },[],\n  )\n\n  // console.log(eventUsers)\n\n  const calculateArc = function () {\n\n    const totalCost = foodCost + drinksCost;\n    const creator = props.user;\n    const arcs: any = {};\n    const arcsPaid: any = {};\n    const arcItems: any = {};\n\n\n    eventUsers.map(user => arcsPaid[user.email] = false)\n    let foodCostPerUser = Math.round((foodCost / foodUsers.length) * 100) / 100;\n    console.log(foodCostPerUser)\n    let drinkCostPerUser =  Math.round((drinksCost / drinksUsers.length) * 100) / 100;\n    console.log(drinkCostPerUser)\n\n    foodUsers.map(user => {\n      if (drinksUsers.indexOf(user) === -1) {\n        arcs[user.email] = foodCostPerUser;\n        arcItems[user.email] = 'F';\n      }\n      else {\n        arcs[user.email] = foodCostPerUser + drinkCostPerUser;\n        arcItems[user.email] = 'FD';\n      }\n    })\n\n    drinksUsers.map(user => {\n      if ((foodUsers.indexOf(user) === -1)) {\n        arcs[user.email] = drinkCostPerUser;\n        arcItems[user.email] = 'D';\n      }\n      else return\n    })\n\n\n\n    // console.log('arcs',arcs)\n    // console.log('arcsPaid',arcItems)\n    // console.log('arcItems',arcsPaid)\n\n\n    const newArc = {\n      eventName: eventName,\n      date: date,\n      venue: venue,\n      foodCost: foodCost,\n      drinksCost: drinksCost,\n      totalCost: foodCost + drinksCost,\n      creator: props.user,\n      arcs: arcs,\n      arcsPaid: arcsPaid,\n      arcItems: arcItems\n    }\n\n    const savedEvent = ApiService.createEvent(newArc);\n    console.log(savedEvent);\n\n  }\n\n  function onChangeEvent(arg : string) {\n    setEventName(arg)\n  };\n  function onChangeDate(arg : string) {\n    setDate(arg)\n  };\n  function onChangeVenue(arg : string) {\n    setVenue(arg)\n  };\n  function onChangeFoodCost(arg : number) {\n    // console.log(arg)\n    setFoodCost(arg)\n  };\n  function onChangeDrinksCost(arg : number) {\n    setDrinksCost(arg)\n  };\n\n  function updateEventUsers(arg : any) {\n    setEventUsers([...eventUsers, ...arg])\n  }\n\n  function updateFoodUsers(arg :any) {\n    setFoodUsers([...foodUsers, ...arg])\n  }\n\n\n  function updateDrinksUsers(arg :any) {\n    setDrinksUsers([...drinksUsers, ...arg])\n  }\n\n\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.button}>\n        <Button color=\"black\"\n          title=\"ADD FRIENDS\"\n          onPress={()=> navigation.navigate('FriendsScreen', {\n            userList: userList,\n            updateEventUsers: updateEventUsers\n          })}\n        />\n      </View>\n\n    <Text style={styles.label}>Event Name</Text>\n      <Controller\n        control={control}\n        render={({field: { value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChangeEvent(value)}\n            value={eventName}\n          />\n        )}\n        name=\"eventName\"\n        rules={{ required: true }}\n      />\n\n      <Text style={styles.label}>Date</Text>\n      <Controller\n        control={control}\n        render={({field: { value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChangeDate(value)}\n            value={date}\n          />\n        )}\n        name=\"date\"\n        rules={{ required: true }}\n      />\n\n      <Text style={styles.label}>Venue</Text>\n      <Controller\n        control={control}\n        render={({field: { value }}) => (\n          <TextInput\n            style={styles.input}\n            onChangeText={value => onChangeVenue(value)}\n            value={venue}\n            />\n            )}\n            name=\"venue\"\n            rules={{ required: true }}\n            />\n\n      <Text style={styles.label}>Food Cost</Text>\n      <Controller\n        control={control}\n        render={({field: { value }}) => (\n          <CurrencyInput\n          keyboardType = 'numeric'\n          style={styles.input}\n          onChangeValue={value => onChangeFoodCost(value)}\n          prefix=\"£\"\n          delimiter=\",\"\n          separator=\".\"\n          precision={2}\n          value={foodCost}\n          onSubmitEditing={()=> {\n            navigation.navigate('FoodScreen', {\n              foodCost: foodCost,\n              eventUsers: eventUsers,\n              updateFoodUsers: updateFoodUsers,\n            })}}\n          />\n        )}\n        name=\"foodCost\"\n        rules={{ required: true }}\n      />\n\n<Text style={styles.label}>Drinks Cost</Text>\n      <Controller\n        control={control}\n        render={({field: { value }}) => (\n          <CurrencyInput\n          keyboardType = 'numeric'\n          style={styles.input}\n          onChangeValue={value => onChangeDrinksCost(value)}\n          prefix=\"£\"\n          delimiter=\",\"\n          separator=\".\"\n          precision={2}\n          value={drinksCost}\n          onSubmitEditing={()=> {\n            navigation.navigate('DrinksScreen', {\n              drinksCost: drinksCost,\n              eventUsers: eventUsers,\n              updateDrinksUsers: updateDrinksUsers,\n            })}}\n          />\n        )}\n        name=\"drinksCost\"\n        rules={{ required: true }}\n      />\n       <View style={styles.button}>\n        <Button color=\"black\"\n          title=\"CREATE ARC\"\n          onPress={()=>{calculateArc();\n            setEventCreated(true)\n          }}\n        />\n      </View>\n  </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 280,\n    height:600,\n    alignItems:'center',\n    alignContent: 'center'\n  },\n  label: {\n    color: 'white',\n    marginTop: 15,\n    marginBottom: 5,\n    // marginRight:220\n  },\n  button: {\n    // justifyContent:center,\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 30,\n    height: 40,\n    backgroundColor: '#C996D4',\n    borderRadius: 4,\n    fontWeight: \"bold\"\n\n  },\n\n  input: {\n    width:320,\n    backgroundColor: 'black',\n    borderColor: 'rgb(129,129,129)',\n    borderWidth:1,\n    color: 'white',\n    height: 40,\n    borderRadius: 4,\n    padding: 10,\n    // backgroundColor:\n  },\n\n  signup: {\n    color: 'rgb(230,230,230)',\n    marginTop: 15,\n    marginBottom: 5,\n    fontWeight: 'bold',\n    fontSize: 30,\n    // fontFamily: 'Josefin Sans'\n  }\n\n\n});\n"]},"metadata":{},"sourceType":"module"}