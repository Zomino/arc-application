{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from \"../ApiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EventListScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myEvents = _useState2[0],\n      setMyEvents = _useState2[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var currentUser = {\n      user: props.route.params.user\n    };\n    ApiService.getEventsList(currentUser).then(function (events) {\n      return setMyEvents(events);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, [myEvents]);\n  var attendedEvents = myEvents.map(function (event) {\n    return _jsxs(View, {\n      style: styles.eventContainer,\n      children: [_jsx(Text, {\n        style: styles.eventHeader,\n        children: event.eventName\n      }), _jsx(Text, {\n        style: styles.venue,\n        children: event.venue\n      }), _jsx(Text, {\n        style: styles.label,\n        children: event.date\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsxs(Text, {\n          style: styles.button2,\n          children: [\"Go To Event\", _jsx(Button, {\n            title: \"\",\n            color: \"black\",\n            onPress: function onPress() {\n              navigation.navigate('SingleEventScreen', {\n                eventId: event._id\n              });\n            }\n          })]\n        })\n      })]\n    }, event._id);\n  });\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.crosshead,\n        children: [_jsx(Text, {\n          style: styles.header,\n          children: \"Current Arcs\"\n        }), _jsx(Image, {\n          style: styles.logo,\n          source: require(\"../assets/logohq.png\")\n        })]\n      }), attendedEvents ? attendedEvents : _jsx(Text, {\n        children: \"Placeholder\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: 1000,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundColor: \"rgb(20,20,30)\"\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    marginLeft: 75\n  },\n  crosshead: {\n    flexDirection: 'row',\n    height: 100,\n    marginTop: 20,\n    marginLeft: 0,\n    paddingLeft: 0,\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  eventHeader: {\n    color: 'white',\n    fontSize: 30,\n    paddingBottom: 5\n  },\n  venue: {\n    color: 'white',\n    fontSize: 20,\n    paddingBottom: 3\n  },\n  eventContainer: {\n    paddingTop: 20,\n    paddingBottom: 5,\n    width: \"90%\",\n    borderTopColor: '#C996D4',\n    borderRightColor: \"rgb(20,20,30)\",\n    borderBottomColor: \"rgb(20,20,30)\",\n    borderLeftColor: \"rgb(20,20,30)\",\n    borderWidth: 2,\n    height: 165,\n    alignItems: 'flex-start',\n    backgroundColor: \"rgb(20,20,30)\"\n  },\n  label: {\n    color: 'white',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  header: {\n    color: 'white',\n    marginTop: 40,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    fontSize: 35\n  },\n  title: {\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold'\n  },\n  button: {\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 5,\n    marginBottom: 3,\n    height: 30,\n    backgroundColor: '#29b6f6',\n    borderRadius: 4,\n    alignSelf: 'flex-start',\n    color: 'black',\n    fontSize: 2\n  },\n  button2: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 9,\n    paddingLeft: 26,\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/EventListScreen.tsx"],"names":["React","useEffect","useState","useNavigation","ApiService","EventListScreen","props","myEvents","setMyEvents","navigation","currentUser","user","route","params","getEventsList","then","events","catch","err","console","log","attendedEvents","map","event","styles","eventContainer","eventHeader","eventName","venue","label","date","button","button2","navigate","eventId","_id","container","crosshead","header","logo","require","StyleSheet","create","height","alignItems","justifyContent","backgroundColor","width","marginLeft","flexDirection","marginTop","paddingLeft","color","fontSize","paddingBottom","paddingTop","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderWidth","marginBottom","fontWeight","title","borderRadius","alignSelf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button, StyleSheet, ScrollView, Image} from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\nimport ApiService from '../ApiService';\n\n\n\ninterface EventListScreenProps {\n  user: string\n}\n\n\nexport default function EventListScreen(props:any) {\n\n  const [myEvents, setMyEvents] = useState([])\n\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const currentUser = {user: props.route.params.user}\n    ApiService.getEventsList(currentUser)\n    // .then(events => console.log(events))\n    .then(events => setMyEvents(events))\n    .catch(err => console.log(err))\n  },[myEvents],\n  )\n\n\nconst attendedEvents = myEvents.map((event: any) =>\n  {\n    return <View style={styles.eventContainer} key={event._id}>\n    <Text style={styles.eventHeader}>\n      {event.eventName}\n    </Text>\n    <Text style={styles.venue}>\n    {event.venue}\n    </Text>\n    <Text style={styles.label}>\n          {event.date}\n    </Text>\n    <View style={styles.button}>\n      <Text style={styles.button2}>\n        Go To Event\n    <Button\n\n\ntitle=''\ncolor='black'\n\nonPress={() => {\n  navigation.navigate('SingleEventScreen', {\n    eventId: event._id\n  })\n}} />\n</Text>\n      </View>\n     </View>\n  }\n  )\n\n\n  return (\n    <ScrollView>\n    <View style={styles.container}>\n      <View style={styles.crosshead}>\n        <Text style={styles.header}>Current Arcs</Text>\n         <Image style={styles.logo} source={require('../assets/logohq.png')} />\n    </View>\n        {attendedEvents ? attendedEvents: <Text>Placeholder</Text>}\n        {/* {attendedEvents} */}\n    </View>\n    </ScrollView>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    // width: 280,\n    height:1000,\n    alignItems:'center',\n    justifyContent: 'flex-start',\n    backgroundColor: \"rgb(20,20,30)\"\n  },\n  logo: {\n    width:100,\n    height:100,\n    marginLeft:75\n    // top:20,\n  },\n  crosshead: {\n    flexDirection:'row',\n    height:100,\n    marginTop:20,\n    marginLeft:0,\n    paddingLeft:0,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    // padding:\n  },\n  eventHeader: {\n    color: 'white',\n    fontSize: 30,\n    paddingBottom:5\n  },\n  venue: {\n    color: 'white',\n    fontSize: 20,\n    paddingBottom:3\n  },\n  eventContainer: {\n    // flex: 1,\n    // alignItems: 'cen',\n\n    paddingTop: 20,\n    paddingBottom: 5,\n    width: \"90%\",\n    borderTopColor:'#C996D4',\n    borderRightColor:\"rgb(20,20,30)\",\n    borderBottomColor:\"rgb(20,20,30)\",\n    borderLeftColor:\"rgb(20,20,30)\",\n    borderWidth:2,\n    // paddingBottom:0,\n    // borderBottom:40,\n    height:165,\n    alignItems:'flex-start',\n    // justifyContent: 'flex-start',\n    backgroundColor: \"rgb(20,20,30)\"\n  },\n  label: {\n    color: 'white',\n    marginTop: 5,\n    marginBottom: 5,\n    // fontWeight:'bold'\n    // marginRight:220\n  },\n  header: {\n    color: 'white',\n    marginTop: 40,\n    marginBottom: 20,\n    fontWeight:'bold',\n    fontSize: 35,\n    // marginRight:220\n  },\n  title: {\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold'\n  },\n  button: {\n    justifyContent: 'center',\n    width: 140,\n    marginTop: 5,\n    marginBottom: 3,\n    height: 30,\n    backgroundColor:'#29b6f6',\n    borderRadius: 4,\n    alignSelf: 'flex-start',\n    color: 'black',\n    fontSize: 2\n\n\n  },\n  button2: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom:9,\n    paddingLeft:26,\n    fontSize: 15,\n  }\n\n})\n"]},"metadata":{},"sourceType":"module"}