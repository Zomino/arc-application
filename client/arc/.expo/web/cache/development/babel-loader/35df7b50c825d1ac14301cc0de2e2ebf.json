{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FoodScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodUsers = _useState2[0],\n      setFoodUsers = _useState2[1];\n\n  function updateFoodUsers(email) {\n    setFoodUsers(function (oldUsers) {\n      return [].concat(_toConsumableArray(oldUsers), [email]);\n    });\n  }\n\n  var foodUserList = props.route.params.eventUsers.map(function (user) {\n    return _jsx(View, {\n      style: foodUsers.includes(user) ? styles.buttonClick : styles.buttonUnclick,\n      children: _jsx(Button, {\n        color: foodUsers.includes(user) ? 'rgb(35,35,35)' : 'rgb(150,150,150)',\n        title: user.firstName + \" \" + user.lastName,\n        onPress: function onPress() {\n          updateFoodUsers(user);\n        }\n      }, user.email)\n    });\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Who Ate?\"\n    }), foodUserList, _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Button, {\n        color: \"white\",\n        title: \"SELECT FRIENDS\",\n        onPress: function onPress() {\n          props.route.params.updateFoodUsers(foodUsers);\n          navigation.navigate('NewArcScreen');\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'rgb(20,20,30)',\n    height: 1500\n  },\n  btnClicked: {\n    color: 'red'\n  },\n  header: {\n    marginTop: 35,\n    marginLeft: 20,\n    marginBottom: 20,\n    fontSize: 30,\n    color: 'white'\n  },\n  buttonClick: {\n    height: 40,\n    width: 350,\n    marginBottom: 10,\n    color: 'white',\n    borderRadius: 10,\n    backgroundColor: '#e1c4ff'\n  },\n  buttonUnclick: {\n    height: 40,\n    marginBottom: 10,\n    width: 350,\n    color: 'white',\n    borderRadius: 10,\n    backgroundColor: 'rgb(35,35,35)'\n  },\n  buttonBorder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0)'\n  },\n  buttonContainer: {\n    backgroundColor: 'rgb(5,5,5)',\n    height: 40,\n    marginTop: 20,\n    width: 350,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FoodScreen.tsx"],"names":["React","useState","useNavigation","FoodScreen","props","navigation","foodUsers","setFoodUsers","updateFoodUsers","email","oldUsers","foodUserList","route","params","eventUsers","map","user","includes","styles","buttonClick","buttonUnclick","firstName","lastName","container","header","buttonContainer","navigate","StyleSheet","create","alignItems","backgroundColor","height","btnClicked","color","marginTop","marginLeft","marginBottom","fontSize","width","borderRadius","buttonBorder","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, Button, StyleSheet} from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\n\n\nexport default function FoodScreen(props: any) {\n\n\n  const navigation = useNavigation();\n\n\n  const [foodUsers, setFoodUsers]: any[] = useState([])\n\n\n\n  function updateFoodUsers(email: any) {\n    setFoodUsers((oldUsers: any) => [...oldUsers, email])\n    // console.log(selectedUsers)\n  }\n\n\n\n  let foodUserList = props.route.params.eventUsers.map((user: any) =>\n  {\n  return   <View style={foodUsers.includes(user) ? styles.buttonClick : styles.buttonUnclick}>\n\n                <Button\n              key={user.email}\n              color={foodUsers.includes(user) ? 'rgb(35,35,35)' : 'rgb(150,150,150)'}\n              title={user.firstName + \" \" + user.lastName}\n              onPress={() => {\n                // console.log(user)\n                updateFoodUsers(user);\n              } } />\n      </View>\n}\n)\n\n\n\n\n\nreturn (\n  <View style={styles.container}>\n    <Text style={styles.header}>Who Ate?</Text>\n    {foodUserList}\n    <View style={styles.buttonContainer}>\n\n    <Button color=\"white\"\n        title=\"SELECT FRIENDS\"\n        onPress={()=> {\n          props.route.params.updateFoodUsers(foodUsers);\n          navigation.navigate('NewArcScreen')}\n        }\n        />\n     </View>\n  </View>\n)\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'rgb(20,20,30)',\n    height: 1500\n  },\n  btnClicked: {\n    color: 'red'\n  },\n  header: {\n    marginTop:35,\n    marginLeft:20,\n    marginBottom:20,\n    fontSize:30,\n    color:'white'\n  },\n  buttonClick: {\n    // color: 'grey'\n    height: 40,\n    width: 350,\n    marginBottom:10,\n    color:'white',\n    borderRadius: 10,\n    backgroundColor: '#e1c4ff',\n    // justifyContent: 'center',\n    // alignItems: 'center'\n  },\n  buttonUnclick: {\n    // color: 'grey'\n    height: 40,\n    marginBottom:10,\n    width: 350,\n    color:'white',\n    borderRadius: 10,\n    backgroundColor: 'rgb(35,35,35)',\n    // justifyContent: 'center',\n    // alignItems: 'center'\n  },\n  buttonBorder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0)'\n  },\n  buttonContainer: {\n    backgroundColor: 'rgb(5,5,5)',\n    height: 40,\n    marginTop:20,\n    width: 350,\n    borderRadius: 10,\n  }\n})"]},"metadata":{},"sourceType":"module"}