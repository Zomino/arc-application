{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FriendsScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedUsers = _useState2[0],\n      setSelectedUsers = _useState2[1];\n\n  var userList = props.route.params.userList.map(function (user) {\n    return _jsx(View, {\n      style: selectedUsers.includes(user) ? styles.buttonClick : styles.buttonUnclick,\n      children: _jsx(Button, {\n        color: selectedUsers.includes(user) ? 'rgb(35,35,35)' : 'rgb(150,150,150)',\n        title: user.firstName + \" \" + user.lastName,\n        onPress: function onPress() {\n          registerAttendee(user);\n        }\n      }, user.email)\n    });\n  });\n\n  function registerAttendee(email) {\n    setSelectedUsers(function (oldUsers) {\n      return [].concat(_toConsumableArray(oldUsers), [email]);\n    });\n    console.log(selectedUsers);\n  }\n\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Add Friends to Arc\"\n      }), userList, _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Button, {\n          color: \"white\",\n          title: \"ADD FRIENDS\",\n          onPress: function onPress() {\n            props.route.params.updateEventUsers(selectedUsers);\n            navigation.navigate('NewArcScreen');\n          }\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'rgb(20,20,30)',\n    height: 1500\n  },\n  btnClicked: {\n    color: 'red'\n  },\n  header: {\n    marginTop: 35,\n    marginLeft: 20,\n    marginBottom: 20,\n    fontSize: 30,\n    color: 'white'\n  },\n  buttonClick: {\n    height: 40,\n    width: 350,\n    marginBottom: 10,\n    color: 'white',\n    borderRadius: 10,\n    backgroundColor: '#e1c4ff'\n  },\n  buttonUnclick: {\n    height: 40,\n    marginBottom: 10,\n    width: 350,\n    color: 'white',\n    borderRadius: 10,\n    backgroundColor: 'rgb(35,35,35)'\n  },\n  buttonBorder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0)'\n  },\n  buttonContainer: {\n    backgroundColor: 'rgb(5,5,5)',\n    height: 40,\n    marginTop: 20,\n    width: 350,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/gooseeduardos/Development/codeWorks/senior/arc-app/client/arc/screens/FriendsScreen.tsx"],"names":["React","useState","useNavigation","FriendsScreen","props","navigation","selectedUsers","setSelectedUsers","userList","route","params","map","user","includes","styles","buttonClick","buttonUnclick","firstName","lastName","registerAttendee","email","oldUsers","console","log","container","header","buttonContainer","updateEventUsers","navigate","StyleSheet","create","alignItems","backgroundColor","height","btnClicked","color","marginTop","marginLeft","marginBottom","fontSize","width","borderRadius","buttonBorder","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, Button, StyleSheet, TextInput, ScrollView} from 'react-native'\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport ApiService from '../ApiService';\nimport { useNavigation } from '@react-navigation/native';\nimport { color } from 'native-base/lib/typescript/theme/styled-system';\n\n\n\ntype FriendsScreenParamList = {\n\n}\n\ntype Props = NativeStackScreenProps<FriendsScreenParamList, 'FriendsScreen'>;\n\nexport default function FriendsScreen(props: any) {\n\n\n  const navigation = useNavigation();\n\n  interface UserType {\n    firstName: string,\n    lastName: string,\n    email: string,\n    password: string,\n  }\n\n\n  const [selectedUsers, setSelectedUsers]: any[] = useState([])\n\n\n\n\n  let userList = props.route.params.userList.map((user: any) =>\n\n      {\n\n                         return         <View style={selectedUsers.includes(user) ? styles.buttonClick : styles.buttonUnclick}>\n                                  <Button\n                                    key={user.email}\n                                    color={selectedUsers.includes(user) ? 'rgb(35,35,35)' : 'rgb(150,150,150)'}\n                                    // buttonStyle={styles.button}\n                                    title={user.firstName + \" \" + user.lastName}\n                                    onPress={() => {\n                                      // console.log(user)\n                                      registerAttendee(user);\n                                    } } />\n                                  </View>\n\n    }\n    )\n\n\n\n\n\n\n  function registerAttendee(email: any) {\n    setSelectedUsers((oldUsers: any) => [...oldUsers, email])\n    console.log(selectedUsers)\n  }\n\n\n  return (\n    <ScrollView>\n\n    <View style={styles.container}>\n      <Text style={styles.header}>Add Friends to Arc</Text>\n      {userList}\n      <View style={styles.buttonContainer}>\n\n      <Button color=\"white\"\n          title=\"ADD FRIENDS\"\n          onPress={()=> {\n            props.route.params.updateEventUsers(selectedUsers);\n            navigation.navigate('NewArcScreen')}\n          }\n          />\n       </View>\n    </View>\n          </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'rgb(20,20,30)',\n    height: 1500\n  },\n  btnClicked: {\n    color: 'red'\n  },\n  header: {\n    marginTop:35,\n    marginLeft:20,\n    marginBottom:20,\n    fontSize:30,\n    color:'white'\n  },\n  buttonClick: {\n    // color: 'grey'\n    height: 40,\n    width: 350,\n    marginBottom:10,\n    color:'white',\n    borderRadius: 10,\n    backgroundColor: '#e1c4ff',\n    // justifyContent: 'center',\n    // alignItems: 'center'\n  },\n  buttonUnclick: {\n    // color: 'grey'\n    height: 40,\n    marginBottom:10,\n    width: 350,\n    color:'white',\n    borderRadius: 10,\n    backgroundColor: 'rgb(35,35,35)',\n    // justifyContent: 'center',\n    // alignItems: 'center'\n  },\n  buttonBorder: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0)'\n  },\n  buttonContainer: {\n    backgroundColor: 'rgb(5,5,5)',\n    height: 40,\n    marginTop:20,\n    width: 350,\n    borderRadius: 10,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}